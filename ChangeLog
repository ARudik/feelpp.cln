2008-03-24  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.2.1 released.

2008-03-23  Bruno Haible  <bruno@clisp.org>

	* autogen.sh: New file.
	* Makefile.devel (build-prerequisites): New target.
	(all): Depend on it.
	(EXCLUDE): Also exclude autogen.sh.

2008-03-23  Bruno Haible  <bruno@clisp.org>

	Make "make -jN" work again, broken on 2008-02-23.
	* src/Makefile.in (ALLOBJECTS_LO): Fix dependency.

2008-03-15  Richard B. Kreckel  <kreckel@ginac.de>

	* m4/gmp.m4 (CL_LIBGMP): New macro brings support for --with-gmp=DIR...
	* configure.ac: ...used here.
	* doc/cln.texi: Document that new feature.
	Suggested by Paul Zimmermann <paul.zimmermann@loria.fr>.

2008-02-23  Bruno Haible  <bruno@clisp.org>

	Support for gcc-4.3 snapshots.
	* autoconf/floatparam.c (check): Change argument types to
	'volatile type*'. This defeats optimizations of gcc 4.3.0 snapshots.

2008-02-23  Bruno Haible  <bruno@clisp.org>

	Change "make alls" and "make allo" to recurse into subdirectories.
	* src/Makefile.in (alls-local): Renamed from alls.
	(allo-local): Renamed from allo.
	(SUBDIRS_TARGET_ALL): Renamed from SUBDIRS_TARGET.
	(alls, allo): New rules.
	(SUBDIRS_TARGET_ALLS, SUBDIRS_TARGET_ALLO): New variables.

2008-02-22  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/integer_io.h (read_integer): Make index args uintC.
	* src/integer/input/cl_I_readparsed.cc: Likewise.
	* include/cln/rational_io.h (read_rational): Likewise.
	* src/rational/input/cl_RA_readparsed.cc: Likewise
	* include/cln/float_io.h (read_float): Likewise.
	* src/float/input/cl_F_readparsed.cc: Likewise.
	* src/vector/output/cl_GV_number_aprint.cc: Vector lengths are uintC.
	* src/vector/output/cl_SV_aprint.cc: Likewise.
	* src/vector/output/cl_SV_number_aprint.cc: Likewise.

2008-02-15  Richard B. Kreckel  <kreckel@ginac.de>

	* m4/cc.m4 (CL_HAVE_ATTRIBUTE_FLATTEN): More robust definition allows...
	* src/base/cl_maybe_inline.h (CL_FLATTEN): ...simplification here.

2008-02-10  Richard B. Kreckel  <kreckel@ginac.de>

	* autoconf/ltmain.sh: Update to libtool-1.5.26.
	* autoconf/config.guess: Likewise.
	* autoconf/config.sub: Likewise.
	* m4/libtool.m4: Likewise.

2008-02-09  Alexei Sheplyakov  <varg@theor.jinr.ru>
            Richard B. Kreckel  <kreckel@ginac.de>

	Avoid compiler warning about ignored 'flatten' attribute directive:
	* m4/cc.m4 (CL_ATTRIBUTE_FLATTEN): New macro...
	* configure.ac: ...used here...
	* include/cln/config.h.in: ...defining CL_HAVE_ATTRIBUTE_FLATTEN,...
	* src/base/cl_maybe_inline.h: ...used to prevent a warning here.

2008-02-07  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/integer.h: Enable modifying operators by default.
	* include/cln/rational.h: Likewise.
	* include/cln/sfloat.h: Likewise.
	* include/cln/ffloat.h: Likewise.
	* include/cln/dfloat.h: Likewise.
	* include/cln/lfloat.h: Likewise.
	* include/cln/float.h: Likewise.
	* include/cln/real.h: Likewise.
	* include/cln/complex.h: Likewise.
	* doc/cln.texi: Document that.

2008-02-06  Richard B. Kreckel  <kreckel@ginac.de>

	Fix crash in output of huge numbers:
	* src/integer/conv/cl_I_to_digits.cc: Make erglen uintC.
	* src/integer/output/cl_I_print_string.cc: Make B_baselen uintC.

2008-02-04  Richard B. Kreckel  <kreckel@ginac.de>

	Fix cl_F output of more than 2^32 decimal digits:
	* src/base/string/cl_sstring.cc (cl_sstring): make len uintC.
	* src/base/string/cl_sstring.h: Likewise.

2008-01-23  Bruno Haible  <bruno@clisp.org>

	Allow 64-bit builds on MacOS X 10.5.
	* m4/general.m4 (CL_CANONICAL_HOST_CPU): Test for x86_64 CPU if
	"uname -m" returns "i386".
	Reported by Ron Garret <ron@flownet.com>.

2008-01-20  Bruno Haible  <bruno@clisp.org>

	Avoid some gcc warnings.
	* autoconf/floatparam.c (flipped_double): Use a union instead of a
	type-punning cast.
	* include/cln/number.h (union ffloatjanus, union dfloatjanus): Remove
	declarations.
	(cl_float_to_FF_pointer, cl_double_to_DF_pointer): Change argument
	type.
	(CL_DEFINE_FLOAT_CONSTRUCTOR, CL_DEFINE_DOUBLE_CONSTRUCTOR): Update.
	* src/float/ffloat/cl_FF.h (cl_float_to_FF_pointer): Change argument
	type.
	(cl_float_to_FF): Remove function.
	* src/float/ffloat/conv/cl_FF_from_float.cc (FAST_FLOAT): Define.
	(cl_float_to_FF_pointer): Change argument type.
	* src/float/dfloat/cl_DF.h (cl_double_to_DF_pointer): Change argument
	type.
	(cl_double_to_DF): Remove function.
	* src/float/dfloat/conv/cl_DF_from_double.cc (FAST_DOUBLE): Define.
	(cl_double_to_DF_pointer): Change argument type.
	* src/float/lfloat/cl_LF_impl.h (LF_decode): Mark the mantlen_zuweisung
	assignment as possibly unused.
	* src/base/cl_low.h (mulu32): Mark the hi_zuweisung assignment as
	possibly unused.
	* src/float/transcendental/cl_LF_zeta_int.cc (compute_zeta_cvz2):
	Remove unused local variable.

2008-01-19  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.2.0 released.

2008-01-19  Richard B. Kreckel  <kreckel@ginac.de>

	* doc/Makefile.in: texi2html -split_chapter doesn't generate
	cln_toc.html any more.
	* doc/cln.texi: Add table of contents in TeX output.

2008-01-18  Alexei Sheplyakov  <varg@theor.jinr.ru>

	Fix linking problems on some platforms caused by inline/non-inline
	versions of same functions (obsoletes MAYBE_INLINE):
	* src/base/cl_maybe_inline.h: New file.
	* src/base/cl_inline2.h: New file.
	* src/base/cl_inline.h: New file.
	* src/base/string/cl_st_make0.h: New file.
	* src/base/cl_macros.h: Pull in cl_maybe_inline.h.
	* src/base/string/cl_st_concat1.cc: Use new CL_INLINE macros and the
	new *_inline functions.
	* src/base/string/cl_st_concat2.cc: Likewise.
	* src/base/string/cl_st_concat3.cc: Likewise.
	* src/complex/algebraic/cl_C_abs.cc: Likewise.
	* src/complex/algebraic/cl_C_abs_aux.cc: Likewise.
	* src/complex/algebraic/cl_C_signum.cc: Likewise.
	* src/complex/algebraic/cl_DF_hypot.cc: Likewise.
	* src/complex/algebraic/cl_FF_hypot.cc: Likewise.
	* src/complex/algebraic/cl_LF_hypot.cc: Likewise.
	* src/complex/algebraic/cl_SF_hypot.cc: Likewise.
	* src/complex/transcendental/cl_C_acosh.cc: Likewise.
	* src/complex/transcendental/cl_C_asinh_aux.cc: Likewise.
	* src/complex/transcendental/cl_C_atanh_aux.cc: Likewise.
	* src/float/dfloat/division/cl_DF_fceil.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_div.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_ffloor.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_minusp.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_mul.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_plusp.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_zerop.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_abs.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_digits.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_eqhashcode.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_exponent.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_idecode.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_precision.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_sign.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_signum.cc: Likewise.
	* src/float/elem/cl_F_minusp.cc: Likewise.
	* src/float/elem/cl_F_plusp.cc: Likewise.
	* src/float/elem/cl_F_zerop.cc: Likewise.
	* src/float/ffloat/division/cl_FF_fceil.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_div.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_ffloor.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_minusp.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_mul.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_plusp.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_zerop.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_abs.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_digits.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_eqhashcode.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_exponent.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_idecode.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_precision.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_sign.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_signum.cc: Likewise.
	* src/float/lfloat/division/cl_LF_fceil.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_compare.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_ffloor.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_minusp.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_plusp.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_to_I.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_zerop.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_abs.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_digits.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_eqhashcode.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_exponent.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_idecode.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_precision.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_shortenrel.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_shortenwith.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_sign.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_signum.cc: Likewise.
	* src/float/misc/cl_F_abs.cc: Likewise.
	* src/float/misc/cl_F_digits.cc: Likewise.
	* src/float/misc/cl_F_eqhashcode.cc: Likewise.
	* src/float/misc/cl_F_exponent.cc: Likewise.
	* src/float/misc/cl_F_idecode.cc: Likewise.
	* src/float/misc/cl_F_precision.cc: Likewise.
	* src/float/misc/cl_F_sign.cc: Likewise.
	* src/float/misc/cl_F_signum.cc: Likewise.
	* src/float/sfloat/division/cl_SF_fceil.cc: Likewise.
	* src/float/sfloat/division/cl_SF_ffloor.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_compare.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_minus.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_minusp.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_plusp.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_uminus.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_zerop.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_abs.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_digits.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_eqhashcode.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_exponent.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_idecode.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_precision.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_sign.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_signum.cc: Likewise.
	* src/float/transcendental/cl_F_atanhx.cc: Likewise.
	* src/float/transcendental/cl_F_atanx.cc: Likewise.
	* src/float/transcendental/cl_F_exp.cc: Likewise.
	* src/float/transcendental/cl_F_expx.cc: Likewise.
	* src/float/transcendental/cl_F_lnx.cc: Likewise.
	* src/float/transcendental/cl_F_sinhx.cc: Likewise.
	* src/float/transcendental/cl_F_sinx.cc: Likewise.
	* src/float/transcendental/cl_F_tan.cc: Likewise.
	* src/float/transcendental/cl_F_tanh.cc: Likewise.
	* src/integer/conv/cl_I_from_DS.cc: Likewise.
	* src/integer/conv/cl_I_from_NDS.cc: Likewise.
	* src/integer/conv/cl_I_from_NUDS.cc: Likewise.
	* src/integer/conv/cl_I_from_UDS.cc: Likewise.
	* src/integer/misc/cl_I_eqhashcode.cc: Likewise.
	* src/integer/misc/cl_I_signum.cc: Likewise.
	* src/integer/ring/cl_I_ring.cc: Likewise.
	* src/rational/elem/cl_RA_minusp.cc: Likewise.
	* src/rational/misc/cl_RA_eqhashcode.cc: Likewise.
	* src/rational/misc/cl_RA_signum.cc: Likewise.
	* src/rational/ring/cl_RA_ring.cc: Likewise.
	* src/real/algebraic/cl_RA_sqrt.cc: Likewise.
	* src/real/algebraic/cl_R_sqrt.cc: Likewise.
	* src/real/conv/cl_F_from_R_def.cc: Likewise.
	* src/real/elem/cl_R_minusp.cc: Likewise.
	* src/real/elem/cl_R_zerop.cc: Likewise.
	* src/real/misc/cl_R_eqhashcode.cc: Likewise.
	* src/real/misc/cl_R_signum.cc: Likewise.
	* src/real/transcendental/cl_R_tan.cc: Likewise.
	* src/real/transcendental/cl_R_tanh.cc: Likewise.
	* src/base/string/cl_st_make0.cc: Remove obsolete MAYBE_INLINE.
	* src/rational/misc/Makeflags: Help compiler include cl_I_eqhashcode.cc.

2008-01-15  Bruno Haible  <bruno@clisp.org>

	* doc/cln.texi: Renamed from doc/cln.tex. Add @node lines and @menu
	lists.
	* doc/addnodes.el: Remove file.
	* doc/Makefile.in (${PACKAGE}.texi): Remove rule.
	(EMACS): Remove variable.
	(maintainer-clean): Don't remove ${PACKAGE}.texi.
	Reported by Alexei Sheplyakov <varg@theor.jinr.ru>.

2008-01-11  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/float.h (cos_sin_t, cosh_sinh_t): Add default ctor.

2008-01-11  Richard B. Kreckel  <kreckel@ginac.de>

	Make some functions more memory efficient:
	* src/float/transcendental/cl_LF_tran.h (eval_rational_series): The
	evaluation of streamed rational series may profit from shift-counting Q,
	too. Introduce a template parameter to determine whether shift-counting
	is to be used or not.
	* src/float/transcendental/cl_LF_ratseries_pqb.cc: Introduce template
	parameter.
	* src/float/transcendental/cl_LF_ratseries_pqa.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pqab.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_qa.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_qab.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_q.cc: Likewise, added
	overload for streamed expansion.
	* src/float/transcendental/cl_LF_ratseries_qb.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pq.cc: Introduce template
	parameter, added overload for streamed expansion using shift-counts.
	* src/float/transcendental/cl_LF_zeta3.cc: Adapt to above changes.
	* src/float/transcendental/cl_LF_pi.cc: Likewise.
	* src/float/transcendental/cl_LF_eulerconst.cc: Likewise.
	* src/float/transcendental/cl_LF_catalanconst.cc: Likewise.
	* src/float/transcendental/cl_LF_cossin_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_coshsinh_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_atanh_recip.cc: Use streamed series.
	* src/float/transcendental/cl_LF_atan_recip.cc: Likewise.
	* src/float/transcendental/cl_LF_exp1.cc: Likewise.
	* src/float/transcendental/cl_LF_exp_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries.cc: Removed.

2008-01-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
            Richard B. Kreckel  <kreckel@ginac.de>

	Cater to the fact that g++ 4.3 will use a different naming for
	the global constructor suffix in shared and static objects.
	* m4/c++-constructors.m4 (CL_GLOBAL_CONSTRUCTORS): Add test for
	the global constructor suffix, define CL_GLOBAL_CONSTRUCTOR_SUFFIX_PIC
	and CL_GLOBAL_CONSTRUCTOR_SUFFIX_NOPIC appropriately.
	* include/cln/config.h.in: Provide templates to be filled in by
	configure.
	* include/cln/modules.h (CL_PROVIDE, CL_REQUIRE): Use
	CL_GLOBAL_CONSTRUCTOR_SUFFIX_PIC, CL_GLOBAL_CONSTRUCTOR_SUFFIX_NOPIC.

2007-12-19  Richard B. Kreckel  <kreckel@ginac.de>

	* m4/general.m4 (CL_CANONICAL_HOST_CPU): Force host_cpu=rs6000 for
	 powerpc64 if userland is 32 bit.

2007-12-18  Richard B. Kreckel  <kreckel@ginac.de>

	* autoconf/ltmain.sh: Update to libtool-1.5.24.
	* autoconf/config.guess: Likewise.
	* autoconf/config.sub: Likewise.
	* m4/libtool.m4: Likewise.

2007-12-18  Richard B. Kreckel  <kreckel@ginac.de>

	* src/float/transcendental/cl_F_lnx.cc: Make actuallen of type uintC.
	* src/float/transcendental/cl_F_expx.cc: Likewise.
	* src/float/transcendental/cl_F_sinhx.cc: Likewise.
	* src/float/transcendental/cl_F_sinx.cc: Likewise.

2007-12-17  Richard B. Kreckel  <kreckel@ginac.de>

	Silly workaround for silly bug in gmp.h:
	* m4/gmp.m4 (CL_GMP_SET_UINTD): Swap #include <gmp.h> and <stdio.h>.

2007-12-17  Richard B. Kreckel  <kreckel@ginac.de>

	* src/polynomial/elem/cl_UP_GF2.h (gf2_mul_table): define for sparc64.

2007-12-04  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/types.h ([su]intE): 64-bit exponents for MIPS and RS6000.

2007-12-03  Richard B. Kreckel  <kreckel@ginac.de>

	* src/float/lfloat/cl_LF.h (cl_heap_lfloat): Change len type to uintC.

2007-11-28  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/object.h: Don't redefine cl_word_alignment on sparc64.
	* src/base/digitseq/cl_asm_sparc64_.cc: Declare use of global
	register %g2 as scratch register within this file.
	Reported by Paul Irofti <bulibuta@gmail.com> and Sven Verdoolaege
	<skimo@kotnet.org>.

2007-11-03  Richard B. Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_asm_i386_.cc (compare_loop_up, 
	compare_loop_down): Fix empty ranges.

2007-10-12  Richard B. Kreckel  <kreckel@ginac.de>

	Fix compilation on CYGWIN:
	* src/float/transcendental/cl_LF_zeta_int.cc: Avoid leading underscores
	in variable names.
	* src/float/transcendental/cl_LF_eulerconst.cc: Likewise.
	Reported by Chris Bouchard <cbouchrd@uiuc.edu>.

2007-10-10  Richard B. Kreckel  <kreckel@ginac.de>

	* src/base/cl_low.h: Add missing linefeeds in SPARC 64 inline assembler.
	* src/base/low/cl_low_div.cc (divu_6464_6464_): Fix a copy-paste typo.
	Reported by Sven Verdoolaege <skimo@kotnet.org>.

2007-10-02  Richard B. Kreckel  <kreckel@ginac.de>

	On popular demand (Debian bug #286266, Ubuntu bug #128851):
	* examples/pi.cc: Output no more than requested number of digits.

2007-10-01  Richard B. Kreckel  <kreckel@ginac.de>

	* autoconf/config.guess, autoconf/config.sub: updated from automake-1.9.

2007-09-19  Richard B. Kreckel  <kreckel@ginac.de>

	* doc/cln.tex: Put entire document in @dircategory Mathematics.
	* doc/Makefile.in: texi2html -split_chapter suddenly uses subdirectory.
	* Makefile.in: Don't install non-existing cln-config* and cln.m4.

2007-09-18  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h (CL_JUMP_TO): Use a pc relative jump on m68k.
	See <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=388000>.

2007-09-16  Richard B. Kreckel  <kreckel@ginac.de>

	* */*: Convert encoding from ISO 8859-1 to UTF-8.

2007-09-13  Richard B. Kreckel  <kreckel@ginac.de>

	Truncated binary splitting for even more memory efficiency:
	* src/float/transcendental/cl_LF_tran.h: Added new overloads. See below.
	* src/float/transcendental/cl_LF_ratseries_stream_pq.cc: Removed and
	moved everything to...
	* src/float/transcendental/cl_LF_ratseries_pq.cc: ...here. Added an
	overload for truncated expansion.
	* src/float/transcendental/cl_LF_ratseries_stream_pqa.cc: Removed and
	moved everything to...
	* src/float/transcendental/cl_LF_ratseries_pqa.cc: ...here. Added an
	overload for truncated expansion.
	* src/float/transcendental/cl_LF_ratseries_stream_pqb.cc: Removed and
	moved everything to...
	* src/float/transcendental/cl_LF_ratseries_pqb.cc: ...here. Added an
	overload for truncated expansion.
	* src/float/transcendental/cl_LF_ratseries_stream_pqab.cc: Removed and
	moved everything to...
	* src/float/transcendental/cl_LF_ratseries_pqab.cc: ...here. Added an
	overload for truncated expansion.
	* src/float/transcendental/cl_LF_ratsumseries_pqcd_aux.cc: Added
	overloads for streamed and truncated expansion.
	* src/float/transcendental/cl_LF_ratsumseries_pqcd.cc: Likewise.
	* src/float/transcendental/cl_LF_ratsumseries_stream_pqd_aux.cc: Removed
	and moved everything to...
	* src/float/transcendental/cl_LF_ratsumseries_pqd_aux.cc: ...here. Added
	an overload for truncated expansion.
	* src/float/transcendental/cl_LF_ratsumseries_stream_pqd.cc: Removed
	and moved everything to...
	* src/float/transcendental/cl_LF_ratsumseries_pqd.cc: ...here. Added an
	overload for truncated expansion.
	* src/float/transcendental/cl_LF_pi.cc: Use truncated series.
	* src/float/transcendental/cl_LF_catalanconst.cc: Likewise.
	* src/float/transcendental/cl_LF_eulerconst.cc: Likewise.
	* src/float/transcendental/cl_LF_zeta_int.cc: Likewise.
	* src/float/transcendental/cl_LF_zeta3.cc: Likewise.

2007-09-07  Richard B. Kreckel  <kreckel@ginac.de>

	More memory efficient Euler-Mascheroni constant:
	* src/float/transcendental/cl_LF_tran.h (cl_pqd_series_stream): New.
	* src/float/transcendental/cl_LF_ratsumseries_stream_pqd.cc: New file.
	* src/float/transcendental/cl_LF_ratsumseries_stream_pqd_aux.cc: New 
	file.
	* src/float/transcendental/cl_LF_eulerconst.cc: Compute series
	coefficients on demand, using a series stream object.

2007-08-02  Richard B. Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_DS_div.cc (cl_recip_suitable): uintC arguments.

2007-08-01  Richard B. Kreckel  <kreckel@ginac.de>

	* */*: Remove cl_boolean, cl_true, and cl_false in favor of built-in
	C++ bool, true, and false.

2007-07-28  Richard B. Kreckel  <kreckel@ginac.de>

	Remove exception hooks in favor of real C++ exceptions:
	* include/cln/exception.h: New file...
	* include/cln/cln.h: ...included here...
	* include/cln/rational.h: ...and here.
	* include/cln/abort.h: Removed.
	* include/cln/integer.h (ash_exception, exquo_exception): Add exception
	types.
	* include/cln/float.h (floating_point_exception,
	floating_point_nan_exception, floating_point_overflow_exception,
	floating_point_underflow_exception): Likewise.
	* include/cln/number_io.h (read_number_exception,
	read_number_bad_syntax_exception, read_number_junk_exception,
	read_number_eof_exception): Likewise.
	* include/cln/object.h (CL_DEFINE_CONVERTER): Replace dynamic assertion
	with a compile-time assertion.
	* include/cln/GV.h: Replace nonreturning functions with exceptions.
	* include/cln/modinteger.h: Likewise.
	* include/cln/SV.h: Likewise.
	* include/cln/ring.h: Likewise.
	* include/cln/string.h: Likewise.
	* include/cln/univpoly.h: Likewise.
	* src/base/cl_abort.cc: Removed.
	* src/base/cl_N_err_d0.cc: Removed.
	* src/base/cl_d0_exception.cc: New file.
	* src/base/cl_as_err.cc: Removed.
	* src/base/cl_as_exception.cc: New file.
	* src/base/cl_notreached.cc: Removed.
	* src/base/cl_notreached_exception.cc: New file.
	* src/base/input/cl_read_err_bad.cc: Removed.
	* src/base/input/cl_read_bad_syntax_exception.cc: New file.
	* src/base/input/cl_read_err_junk.cc: Removed.
	* src/base/input/cl_read_junk_exception.cc: New file.
	* src/base/input/cl_read_err_eof.cc: Removed.
	* src/base/input/cl_read_eof_exception.cc: New file.
	* src/base/cl_N.h (cl_as_error): Removed (see cln/exception.h).
	* src/base/macros.h (NOTREACHED): Throw.
	* src/base/cl_malloc.cc (xmalloc): Throw.
	* src/base/digitseq/cl_2DS_div.cc: Throw.
	* src/base/digitseq/cl_DS_div.cc: Throw.
	* src/base/digitseq/cl_DS_mul.cc: Throw.
	* src/base/digitseq/cl_DS_mul_fftc.h: Throw.
	* src/base/digitseq/cl_DS_mul_fftcs.h: Throw.
	* src/base/digitseq/cl_DS_mul_fftm.h: Throw.
	* src/base/digitseq/cl_DS_mul_fftp.h: Throw.
	* src/base/digitseq/cl_DS_mul_fftp3.h: Throw.
	* src/base/digitseq/cl_DS_mul_fftp3m.h: Throw.
	* src/base/digitseq/cl_DS_mul_fftr.h: Throw.
	* src/base/digitseq/cl_DS_mul_nuss.h: Throw.
	* src/base/digitseq/cl_DS_recipsqrt.cc: Throw.
	* src/base/digitseq/cl_DS_sqrt.cc: Throw.
	* src/base/hash/cl_hash.h: Throw.
	* src/base/hash/cl_hash1.h: Throw.
	* src/base/hash/cl_hash1weak.h: Throw.
	* src/base/hash/cl_hash2.h: Throw.
	* src/base/hash/cl_hash2weak.h: Throw.
	* src/base/hash/cl_hashset.h: Throw.
	* src/base/hash/cl_hashuniq.h: Throw.
	* src/base/hash/cl_hashuniqweak.h: Throw.
	* src/base/proplist/cl_pl_add.cc: Throw.
	* src/base/ring/cl_no_ring.cc: Throw.
	* src/base/string/cl_spushstring.h: Throw.
	* src/base/symbol/cl_symbol.cc: Throw.
	* src/integer/bitwise/cl_I_ash.h: Removed (see cln/integer.h.)
	* src/integer/bitwise/cl_I_asherr.cc: Removed.
	* src/integer/bitwise/cl_I_ash_exception.cc: New file.
	* src/integer/division/cl_I_exquoerr.cc: Removed.
	* src/integer/division/cl_I_exquo_exception.cc: New file.
	* src/integer/cl_I.h: Throw.
	* src/integer/division/cl_I_exquopos.cc: Throw.
	* src/integer/bitwise/cl_I_logbitp_I.cc: Throw.
	* src/integer/bitwise/cl_I_ash.cc: Throw.
	* src/integer/bitwise/cl_I_ash_I.cc: Throw.
	* src/integer/division/cl_I_exquo.cc: Throw.
	* src/integer/gcd/cl_I_gcd_aux2.cc: Throw.
	* src/integer/conv/cl_I_to_L.cc: Throw.
	* src/integer/conv/cl_I_to_Q.cc: Throw.
	* src/integer/conv/cl_I_to_UL.cc: Throw.
	* src/integer/conv/cl_I_to_UQ.cc: Throw.
	* src/integer/conv/cl_I_to_digits.cc: Throw.
	* src/integer/elem/cl_I_div.cc: Throw.
	* src/integer/algebraic/cl_I_sqrt.cc: Throw.
	* src/integer/input/cl_I_read.cc: Throw.
	* src/integer/input/cl_I_read_stream.cc: Throw.
	* src/integer/misc/cl_I_as.cc: Throw.
	* src/rational/elem/cl_RA_from_I_I_div.cc: Throw.
	* src/rational/elem/cl_RA_recip.cc: Throw.
	* src/rational/input/cl_RA_read.cc: Throw.
	* src/rational/input/cl_RA_read_stream.cc: Throw.
	* src/rational/input/cl_RA_readparsed.cc: Throw.
	* src/rational/misc/cl_RA_as.cc: Throw.
	* src/float/base/cl_F_err_nan.cc: Removed.
	* src/float/base/cl_F_nan_exception.cc: New file.
	* src/float/base/cl_F_err_un.cc: Removed.
	* src/float/base/cl_F_underflow_exception.cc: New file.
	* src/float/base/cl_F_err_ov.cc: Removed.
	* src/float/base/cl_F_overflow_exception.cc: New file.
	* src/float/cl_F.h (cl_error_floating_point_nan,
	cl_error_floating_point_overflow, cl_error_floating_point_underflow):
	Removed (see cln/float.h.)
	* src/float/sfloat/cl_SF.h: Throw.
	* src/float/sfloat/elem/cl_SF_div.cc: Throw.
	* src/float/sfloat/elem/cl_SF_from_RA.cc: Throw.
	* src/float/sfloat/elem/cl_SF_scale.cc: Throw.
	* src/float/sfloat/elem/cl_SF_scale_I.cc: Throw.
	* src/float/sfloat/misc/cl_SF_as.cc: Throw.
	* src/float/ffloat/cl_FF.h: Throw.
	* src/float/ffloat/conv/cl_FF_from_float.cc: Throw.
	* src/float/ffloat/elem/cl_FF_div.cc: Throw.
	* src/float/ffloat/elem/cl_FF_from_RA.cc: Throw.
	* src/float/ffloat/elem/cl_FF_scale.cc: Throw.
	* src/float/ffloat/elem/cl_FF_scale_I.cc: Throw.
	* src/float/ffloat/misc/cl_FF_as.cc: Throw.
	* src/float/dfloat/cl_DF.h: Throw.
	* src/float/dfloat/conv/cl_DF_from_double.cc: Throw.
	* src/float/dfloat/elem/cl_DF_div.cc: Throw.
	* src/float/dfloat/elem/cl_DF_from_RA.cc: Throw.
	* src/float/dfloat/elem/cl_DF_scale.cc: Throw.
	* src/float/dfloat/elem/cl_DF_scale_I.cc: Throw.
	* src/float/dfloat/misc/cl_DF_as.cc: Throw.
	* src/float/lfloat/algebraic/cl_LF_sqrt.cc: Throw.
	* src/float/lfloat/elem/cl_LF_1plus.cc: Throw.
	* src/float/lfloat/elem/cl_LF_I_div.cc: Throw.
	* src/float/lfloat/elem/cl_LF_I_mul.cc: Throw.
	* src/float/lfloat/elem/cl_LF_div.cc: Throw.
	* src/float/lfloat/elem/cl_LF_from_I.cc: Throw.
	* src/float/lfloat/elem/cl_LF_mul.cc: Throw.
	* src/float/lfloat/elem/cl_LF_scale.cc: Throw.
	* src/float/lfloat/elem/cl_LF_scale_I.cc: Throw.
	* src/float/lfloat/elem/cl_LF_square.cc: Throw.
	* src/float/lfloat/misc/cl_LF_as.cc: Throw.
	* src/float/lfloat/misc/cl_LF_shorten.cc: Throw.
	* src/float/lfloat/misc/cl_LF_shortenrel.cc: Throw.
	* src/float/lfloat/misc/cl_LF_shortenwith.cc: Throw.
	* src/float/input/cl_F_read.cc: Throw.
	* src/float/input/cl_F_read_stream.cc: Throw.
	* src/float/misc/cl_F_as.cc: Throw.
	* src/float/misc/cl_F_shortenrel.cc: Throw.
	* src/float/transcendental/cl_LF_coshsinh_aux.cc: Throw.
	* src/float/transcendental/cl_LF_cossin_aux.cc: Throw.
	* src/float/transcendental/cl_LF_exp_aux.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_a.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_ab.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_b.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_p.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_pa.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_pab.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_pb.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_pq.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_pqa.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_pqab.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_pqb.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_q.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_qa.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_qab.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_qb.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_stream_pq.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_stream_pqa.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_stream_pqab.cc: Throw.
	* src/float/transcendental/cl_LF_ratseries_stream_pqb.cc: Throw.
	* src/float/transcendental/cl_LF_ratsumseries_pqcd_aux.cc: Throw.
	* src/float/transcendental/cl_LF_ratsumseries_pqd.cc: Throw.
	* src/float/transcendental/cl_LF_ratsumseries_pqd_aux.cc: Throw.
	* src/float/transcendental/cl_LF_zeta_int.cc: Throw.
	* src/real/elem/cl_R_div.cc: Throw.
	* src/real/format-output/cl_fmt_cardinal.cc: Throw.
	* src/real/format-output/cl_fmt_newroman.cc: Throw.
	* src/real/format-output/cl_fmt_oldroman.cc: Throw.
	* src/real/input/cl_R_read.cc: Throw.
	* src/real/input/cl_R_read_stream.cc: Throw.
	* src/real/misc/cl_R_as.cc: Throw.
	* src/real/random/cl_R_random.cc: Throw.
	* src/real/transcendental/cl_R_atan2.cc: Throw.
	* src/real/transcendental/cl_R_log.cc: Throw.
	* src/complex/input/cl_N_read.cc: Throw.
	* src/complex/input/cl_N_read_stream.cc: Throw.
	* src/complex/misc/cl_N_as.cc: Throw.
	* src/complex/transcendental/cl_C_atanh_aux.cc: Throw.
	* src/complex/transcendental/cl_C_expt_C.cc: Throw.
	* src/complex/transcendental/cl_C_log.cc: Throw.
	* src/complex/transcendental/cl_C_log2.cc: Throw.
	* src/numtheory/cl_nt_cornacchia1.cc: Throw.
	* src/numtheory/cl_nt_cornacchia4.cc: Throw.
	* src/numtheory/cl_nt_isprobprime.cc: Throw.
	* src/numtheory/cl_nt_jacobi.cc: Throw.
	* src/numtheory/cl_nt_jacobi_low.cc: Throw.
	* src/numtheory/cl_nt_sqrtmodp.cc: Throw.
	* src/modinteger/cl_MI.cc: Throw.
	* src/modinteger/cl_MI_int.h: Throw.
	* src/modinteger/cl_MI_montgom.h: Throw.
	* src/modinteger/cl_MI_pow2.h: Throw.
	* src/modinteger/cl_MI_rshift.cc: Throw.
	* src/modinteger/cl_MI_std.h: Throw.
	* src/polynomial/elem/cl_UP_GF2.h: Throw.
	* src/polynomial/elem/cl_UP_MI.h: Throw.
	* src/polynomial/elem/cl_UP_gen.h: Throw.
	* src/polynomial/elem/cl_UP_named.cc: Throw.
	* src/polynomial/elem/cl_UP_no_ring.cc (uninitialized_error, 
	uninitialized_ring): Removed (see cln/ring.h.)
	* src/polynomial/elem/cl_UP_number.h: Throw.
	* src/polynomial/elem/cl_UP_unnamed.cc: Throw.
	* src/vector/cl_GV_I.cc: Throw.
	* src/vector/cl_GV_number.cc: Throw.
	* tests/timediv2adic-compare.cc: Use default abort(), not cl_abort().
	* tests/timeprint-compare.cc: Likewise.
	* tests/timerecip2adic-compare.cc: Likewise.
	* doc/cln.tex: Document the exception classes.
	* examples/contfrac.cc: Use try/catch instead of setjmp/longjmp.
	* INSTALL: undocument -fno-exceptions.
	* README: Add exceptions to list of used C++ features.

2007-06-20  Richard B. Kreckel  <kreckel@ginac.de>

	* cln.spec.in (Source0): Package is bzip2-compressed.
	Reported by Markus Grabner <grabner@icg.tugraz.at>.

2007-05-31  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/integer.h (cl_I_to_E, cl_I_to_UE): New functions.
	* src/float/transcendental/cl_LF_exp_aux.cc: Make lq argument an uintE.
	* src/float/transcendental/cl_LF_cossin_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_coshsinh_aux.cc: Likewise.
	* src/float/transcendental/cl_F_tran.h: Change declaration of lq.
	* src/float/transcendental/cl_F_lnx.cc: Fix some exponent types.
	* src/float/transcendental/cl_F_expx.cc: Likewise.
	* src/float/transcendental/cl_F_sinh.cc: Likewise.
	* src/float/transcendental/cl_F_atanx.cc: Likewise.
	* src/float/transcendental/cl_F_coshsinh.cc: Likewise.
	* src/float/transcendental/cl_LF_cossin.cc: Likewise.
	* src/float/transcendental/cl_LF_coshsinh.cc: Likewise.

2007-04-09  Richard B. Kreckel  <kreckel@ginac.de>

	More memory efficient constants:
	* src/float/transcendental/cl_LF_pi.cc (compute_pi_ramanujan_163_fast):
	Compute series coefficients on demand, using a series stream object.
	* src/float/transcendental/cl_LF_zeta3.cc (zeta3): Likewise.
	* src/float/transcendental/cl_LF_catalanconst.cc
	(compute_catalanconst_ramanujan_fast): Likewise.
	(compute_catalanconst_lupas): New function.
	(compute_catalanconst): Simplify, based on new benchmark.

2007-04-02  Alexei Sheplyakov  <varg@theor.jinr.ru>

	Debian Bug#412103:
	* cln.pc.in: list -lgmp in Libs.private instead of in Libs.
	* doc/cln.tex: Undocument cln-config, properly document pkg-config.
	* cln-config.1.in: Remove.
	* cln-config.in: Remove.
	* cln.m4: Remove.
	* configure.ac: Don't output cln-config and cln-config.1.

2006-12-24  Bruno Haible  <bruno@clisp.org>

	Make autoconfiguration work with gcc-4.3 snapshots.
	* autoconf/intparam.c (main1): Rename get_integer_bitsize to
	get_unsigned_integer_bitsize. New macro get_signed_integer_bitsize.

2006-12-19  Bruno Haible  <bruno@clisp.org>

	* autoconf/intparam.c (main): Use 'return', not exit().
	* autoconf/floatparam.c (main): Likewise.
	Reported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.

2006-12-11  Richard B. Kreckel  <kreckel@ginac.de>

	Extend the exponent range from 32 bits to 64 bits on selected platforms.
	* include/cln/number.h: Add signatures for operations with long long.
	* include/cln/complex_class.h: Likewise.
	* include/cln/real_class.h: Likewise.
	* include/cln/real.h: Likewise.
	* include/cln/rational_class.h: Likewise.
	* include/cln/rational.h: Likewise.
	* include/cln/integer_class.h: Likewise.
	* include/cln/integer.h: Likewise.
	* include/cln/float.h: Likewise.
	* include/cln/lfloat.h: Likewise.
	* include/cln/types.h (sintE and uintE): New types for exponents.
	* include/cln/*float.h: Use the new types for exponents.
	* include/cln/floatformat.h (float_format_t): Make underlying type
	compatible with sintE.
	* doc/cln.tex: Document changed float_exponent return value.
	* src/float/cl_F.h: Likewise.
	* src/float/ffloat/misc/cl_FF_exponent.cc: Likewise.
	* src/float/input/cl_F_read.cc: Likewise.
	* src/float/lfloat/cl_LF.h: Likewise.
	* src/float/lfloat/cl_LF_impl.h: Likewise.
	* src/float/lfloat/algebraic/cl_LF_sqrt.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_1plus.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_I_div.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_I_mul.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_compare.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_div.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_from_I.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_fround.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_ftrunc.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_futrunc.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_mul.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_scale.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_scale_I.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_square.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_to_I.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_decode.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_exponent.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_idecode.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_shortenrel.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_shortenwith.cc: Likewise.
	* src/float/misc/cl_F_decode.cc: Likewise.
	* src/float/misc/cl_F_exponent.cc: Likewise.
	* src/float/misc/cl_F_shortenrel.cc: Likewise.
	* src/float/misc/cl_float_format.cc: Likewise.
	* src/float/output/cl_F_dprint.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_exponent.cc: Likewise.
	* src/float/transcendental/cl_F_atanhx.cc: Likewise.
	* src/float/transcendental/cl_F_atanx.cc: Likewise.
	* src/float/transcendental/cl_F_cosh.cc: Likewise.
	* src/float/transcendental/cl_F_expx.cc: Likewise.
	* src/float/transcendental/cl_F_lnx.cc: Likewise.
	* src/float/transcendental/cl_F_sinhx.cc: Likewise.
	* src/float/transcendental/cl_F_sinx.cc: Likewise.
	* src/float/transcendental/cl_LF_pi.cc: Likewise.
	* src/integer/cl_I.h: Likewise.
	* src/complex/algebraic/cl_LF_hypot.cc: Likewise.
	* src/complex/elem/division/cl_C_LF_recip.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_exponent.cc: Likewise.
	* src/integer/conv/cl_I_from_Q2.cc: Added.
	* src/base/cl_low.h (isqrtC): New function, for 64 bit falls back to...
	* src/base/low/cl_low_isqrt.cc (isqrt): ...this new implementation.
	* src/base/cl_macros.h (bitc): Make sure 64 bit is used if required by
	exponent operations.
	* examples/pi.cc: Support more than 646456614 decimal digits.

2006-11-02  Richard B. Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_DS.h: #undef DS, needed for i386-Solaris.

2006-10-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* tests/Makefile.in (VPATH): Fix syntax error.

2006-09-14  Richard B. Kreckel  <kreckel@ginac.de>
	
	* examples/perfnum.cc: update to presumed 44th Mersenne prime.

2006-08-15  Richard B. Kreckel  <kreckel@ginac.de>

	* tests/Makefile.in: MinGW support for make check
	(Patch by Sheplyakov Alexei <varg@theor.jinr.ru> to add ${EXEEXT}).
	* Makefile.in: Convert from $(VAR) to ${VAR} syntax.
	* benchmarks/Makefile.in: Likewise.
	* doc/Makefile.in: Likewise.
	* examples/Makefile.in: Likewise.
	* src/Makefile.in: Likewise.
	* tests/Makefile.in: Likewise.

2006-08-06  Richard B. Kreckel  <kreckel@ginac.de>

	* configure.ac: Re-enable shared lib on non-MinGW platforms, sigh.

2006-08-04  Sheplyakov Alexei  <varg@theor.jinr.ru>

	* configure.ac: Disable shared lib on MinGW.

2006-08-03  Sheplyakov Alexei  <varg@theor.jinr.ru>

	* m4/param.m4: Add support for MinGW.
	* src/base/random/cl_random_from.cc: Fix for last patch.

2006-07-23  Sheplyakov Alexei  <varg@theor.jinr.ru>

	* src/base/random/cl_random_from.cc: Add support for MinGW.

2006-06-13  Richard B. Kreckel  <kreckel@ginac.de>

	* m4/general.m4 (CL_CANONICAL_HOST_CPU): Force host_cpu=i386 for x86_64
	if userland is 32 bit.
	* include/cln/config.h.in: Simplify __x86_64__ selection.
	* src/base/digitseq/cl_asm_x86_64_.cc: Remove.

2006-06-09  Richard B. Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_DS.h (struct DS): Change len type to uintC.

2006-05-30  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	* m4/gettimeofday.m4 (CL_GETTIMEOFDAY): Fix M4 quoting.

2006-05-20  Bruno Haible  <bruno@clisp.org>

	* src/base/random/cl_random_from.cc: Treat FreeBSD, NetBSD like other
	Unix platforms.

2006-05-07  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h (CL_JUMP_TO): Fix for Intel Mac.

2006-04-25  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	Prepare for autoconf-2.60.
	* Makefile.in (datarootdir): New variable.
	* src/Makefile.in (datarootdir): New variable.
	* doc/Makefile.in (datarootdir): New variable.

2006-04-25  Bruno Haible  <bruno@clisp.org>
            Richard B. Kreckel  <kreckel@ginac.de>

	Make it theoretically possible to use bignums and long-floats with
	more than 2^32 significant digits or bits.
	* doc/cln.tex (logcount): Change return type to uintC.
	(struct cl_byte): Change elements to uintC.
	(integer_length, ord2, power2p): Change return type to uintC.
	(scale_float): Change argument type to sintC.
	(float_digits, float_precision): Change return type to uintC.
	* examples/atan_recip.cc: Use uintC instead of uintL where appropriate.
	* examples/atanh_recip.cc: Likewise.
	* include/cln/GV.h: Likewise.
	* include/cln/GV_complex.h: Likewise.
	* include/cln/GV_integer.h: Likewise.
	* include/cln/GV_modinteger.h: Likewise.
	* include/cln/GV_number.h: Likewise.
	* include/cln/GV_rational.h: Likewise.
	* include/cln/GV_real.h: Likewise.
	* include/cln/SV.h: Likewise.
	* include/cln/SV_complex.h: Likewise.
	* include/cln/SV_integer.h: Likewise.
	* include/cln/SV_number.h: Likewise.
	* include/cln/SV_rational.h: Likewise.
	* include/cln/SV_real.h: Likewise.
	* include/cln/SV_ringelt.h: Likewise.
	* include/cln/dfloat.h: Likewise.
	* include/cln/ffloat.h: Likewise.
	* include/cln/float.h: Likewise.
	* include/cln/integer.h: Likewise.
	* include/cln/lfloat.h: Likewise.
	* include/cln/modinteger.h: Likewise.
	* include/cln/sfloat.h: Likewise.
	* src/base/cl_low.h (integerlengthC): New macro.
	* src/base/digitseq/cl_2DS_div.cc: Use uintC instead of uintL where
	appropriate.
	* src/base/digitseq/cl_2DS_recip.cc: Likewise.
	* src/base/digitseq/cl_DS.h: Likewise.
	* src/base/digitseq/cl_DS_mul.c: Likewise.
	* src/base/digitseq/cl_DS_mul_fftc.h: Likewise.
	* src/base/digitseq/cl_DS_mul_fftcs.h: Likewise.
	* src/base/digitseq/cl_DS_mul_fftm.h: Likewise.
	* src/base/digitseq/cl_DS_mul_fftp.h: Likewise.
	* src/base/digitseq/cl_DS_mul_fftp3.h: Likewise.
	* src/base/digitseq/cl_DS_mul_fftp3m.h: Likewise.
	* src/base/digitseq/cl_DS_mul_fftr.h: Likewise.
	* src/base/digitseq/cl_DS_mul_kara.h: Likewise.
	* src/base/digitseq/cl_DS_mul_nuss.h: Likewise.
	* src/base/digitseq/cl_DS_recip.cc: Likewise.
	* src/base/digitseq/cl_DS_recipsqrt.cc: Likewise.
	* src/base/digitseq/cl_DS_sqrt.cc: Likewise.
	* src/base/digitseq/cl_DS_trandom.cc: Likewise.
	* src/complex/input/cl_N_read.cc: Likewise.
	* src/complex/transcendental/cl_C_asinh_aux.cc: Likewise.
	* src/complex/transcendental/cl_C_expt_C.cc: Likewise.
	* src/float/cl_F.h: Likewise.
	* src/float/conv/cl_F_from_F_f.cc: Likewise.
	* src/float/conv/cl_F_from_I_f.cc: Likewise.
	* src/float/conv/cl_F_from_RA_f.cc: Likewise.
	* src/float/dfloat/conv/cl_I_to_double.cc: Likewise.
	* src/float/dfloat/conv/cl_RA_to_double.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_from_I.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_from_RA.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_scale.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_digits.cc: Likewise.
	* src/float/dfloat/misc/cl_DF_precision.cc: Likewise.
	* src/float/elem/cl_F_scale.cc: Likewise.
	* src/float/ffloat/conv/cl_I_to_float.cc: Likewise.
	* src/float/ffloat/conv/cl_RA_to_float.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_from_I.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_from_RA.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_scale.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_digits.cc: Likewise.
	* src/float/ffloat/misc/cl_FF_precision.cc: Likewise.
	* src/float/input/cl_F_read.cc: Likewise.
	* src/float/lfloat/algebraic/cl_LF_sqrt.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_1plus.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_I_div.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_I_mul.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_div.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_from_I.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_from_RA.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_fround.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_ftrunc.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_futrunc.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_scale.cc: Likewise.
	* src/float/lfloat/elem/cl_LF_to_I.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_digits.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_idecode.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_leninc.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_lenincx.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_precision.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_shortenrel.cc: Likewise.
	* src/float/lfloat/misc/cl_LF_shortenwith.cc: Likewise.
	* src/float/misc/cl_F_digits.cc: Likewise.
	* src/float/misc/cl_F_epsneg.cc: Likewise.
	* src/float/misc/cl_F_epspos.cc: Likewise.
	* src/float/misc/cl_F_leastneg.cc: Likewise.
	* src/float/misc/cl_F_leastpos.cc: Likewise.
	* src/float/misc/cl_F_mostneg.cc: Likewise.
	* src/float/misc/cl_F_mostpos.cc: Likewise.
	* src/float/misc/cl_F_precision.cc: Likewise.
	* src/float/misc/cl_F_rational.cc: Likewise.
	* src/float/misc/cl_F_shortenrel.cc: Likewise.
	* src/float/output/cl_F_dprint.cc: Likewise.
	* src/float/random/cl_F_random.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_from_I.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_from_RA.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_scale.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_digits.cc: Likewise.
	* src/float/sfloat/misc/cl_SF_precision.cc: Likewise.
	* src/float/transcendental/cl_F_atanhx.cc: Likewise.
	* src/float/transcendental/cl_F_atanx.cc: Likewise.
	* src/float/transcendental/cl_F_catalanconst_f.cc: Likewise.
	* src/float/transcendental/cl_F_cos.cc: Likewise.
	* src/float/transcendental/cl_F_cosh.cc: Likewise.
	* src/float/transcendental/cl_F_coshsinh.cc: Likewise.
	* src/float/transcendental/cl_F_cossin.cc: Likewise.
	* src/float/transcendental/cl_F_eulerconst_f.cc: Likewise.
	* src/float/transcendental/cl_F_exp1_f.cc: Likewise.
	* src/float/transcendental/cl_F_expx.cc: Likewise.
	* src/float/transcendental/cl_F_ln10_f.cc: Likewise.
	* src/float/transcendental/cl_F_ln2_f.cc: Likewise.
	* src/float/transcendental/cl_F_lnx.cc: Likewise.
	* src/float/transcendental/cl_F_pi_f.cc: Likewise.
	* src/float/transcendental/cl_F_sin.cc: Likewise.
	* src/float/transcendental/cl_F_sinh.cc: Likewise.
	* src/float/transcendental/cl_F_sinhx.cc: Likewise.
	* src/float/transcendental/cl_F_sinx.cc: Likewise.
	* src/float/transcendental/cl_F_tran.h: Likewise.
	* src/float/transcendental/cl_F_zeta_int_f.cc: Likewise.
	* src/float/transcendental/cl_LF_atan_recip.cc: Likewise.
	* src/float/transcendental/cl_LF_atanh_recip.cc: Likewise.
	* src/float/transcendental/cl_LF_catalanconst.cc: Likewise.
	* src/float/transcendental/cl_LF_coshsinh_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_cossin_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_eulerconst.cc: Likewise.
	* src/float/transcendental/cl_LF_exp1.cc: Likewise.
	* src/float/transcendental/cl_LF_exp_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_pi.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_a.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_ab.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_b.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_p.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pa.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pab.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pb.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pq.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pqa.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pqab.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_pqb.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_q.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_qa.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_qab.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_qb.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_stream_pq.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_stream_pqa.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_stream_pqab.cc: Likewise.
	* src/float/transcendental/cl_LF_ratseries_stream_pqb.cc: Likewise.
	* src/float/transcendental/cl_LF_ratsumseries_pqcd.cc: Likewise.
	* src/float/transcendental/cl_LF_ratsumseries_pqcd_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_ratsumseries_pqd.cc: Likewise.
	* src/float/transcendental/cl_LF_ratsumseries_pqd_aux.cc: Likewise.
	* src/float/transcendental/cl_LF_tran.h: Likewise.
	* src/float/transcendental/cl_LF_zeta3.cc: Likewise.
	* src/float/transcendental/cl_LF_zeta_int.cc: Likewise.
	* src/integer/algebraic/cl_I_rootp_I.cc: Likewise.
	* src/integer/algebraic/cl_I_rootp_aux.cc: Likewise.
	* src/integer/bitwise/cl_I_ash.cc: Likewise.
	* src/integer/bitwise/cl_I_ash_I.cc: Likewise.
	* src/integer/bitwise/cl_I_byte.h: Likewise.
	* src/integer/bitwise/cl_I_fullbyte.cc: Likewise.
	* src/integer/bitwise/cl_I_ilength.cc: Likewise.
	* src/integer/bitwise/cl_I_ldb.cc: Likewise.
	* src/integer/bitwise/cl_I_ldbtest.cc: Likewise.
	* src/integer/bitwise/cl_I_ldbx.cc: Likewise.
	* src/integer/bitwise/cl_I_ldbxtest.cc: Likewise.
	* src/integer/bitwise/cl_I_logbitp.cc: Likewise.
	* src/integer/bitwise/cl_I_logbitp_I.cc: Likewise.
	* src/integer/bitwise/cl_I_logcount.cc: Likewise.
	* src/integer/bitwise/cl_I_mkf.cc: Likewise.
	* src/integer/bitwise/cl_I_mkfx.cc: Likewise.
	* src/integer/cl_I.h: Likewise.
	* src/integer/conv/cl_I_to_digits.cc: Likewise.
	* src/integer/conv/cl_I_digits_need.cc: Likewise.
	* src/integer/conv/cl_I_from_digits.cc: Likewise.
	* src/integer/gcd/cl_I_gcd.cc: Likewise.
	* src/integer/gcd/cl_I_xgcd.cc: Likewise.
	* src/integer/misc/cl_I_eqhashcode.cc: Likewise.
	* src/integer/misc/cl_I_ord2.cc: Likewise.
	* src/integer/misc/cl_I_power2p.cc: Likewise.
	* src/integer/output/cl_I_cached_power.h (cached_power_table): allow
	for 40 elements.
	* src/integer/output/cl_I_decstring.cc: Use uintC instead of uintL
	where appropriate.
	* src/integer/output/cl_I_print.cc: Likewise.
	* src/integer/output/cl_I_print_string.cc: Likewise.
	* src/modinteger/cl_MI.cc: Likewise.
	* src/modinteger/cl_MI_lshift.cc: Likewise.
	* src/modinteger/cl_MI_montgom.h: Likewise.
	* src/modinteger/cl_MI_pow2.h: Likewise.
	* src/modinteger/cl_MI_pow2m1.h: Likewise.
	* src/modinteger/cl_MI_pow2p1.h: Likewise.
	* src/modinteger/cl_MI_rshift.cc: Likewise.
	* src/modinteger/cl_MI_std.h: Likewise.
	* src/numtheory/cl_IF_millerrabin.cc: Likewise.
	* src/numtheory/cl_nt_isprobprime.cc: Likewise.
	* src/numtheory/cl_nt_sqrtmodp.cc: Likewise.
	* src/polynomial/elem/cl_UP_GF2.h: Likewise.
	* src/real/conv/cl_F_from_R_f.cc: Likewise.
	* src/real/format-output/cl_fmt_floatstring.cc: Likewise.
	* src/real/input/cl_R_read.cc: Likewise.
	* src/vector/cl_GV_I.cc: Likewise.
	* src/vector/cl_GV_I_copy.cc: Likewise.
	* src/vector/cl_GV_number.cc: Likewise.
	* src/vector/cl_GV_number_copy.cc: Likewise.
	* src/vector/cl_SV_copy.cc: Likewise.
	* src/vector/cl_SV_number.cc: Likewise.
	* src/vector/cl_SV_ringelt.cc: Likewise.
	* tests/main.cc: Likewise.
	* tests/test_I_ilength.cc: Likewise.
	* tests/test_I_ord2.cc: Likewise.

2006-04-19  Bruno Haible  <bruno@clisp.org>

	Prepare for autoconf-2.60.
	* general.m4 (CL_CC_WORKS): Include <stdlib.h>, for exit() declaration.
	* longdouble.m4 (CL_LONGDOUBLE): Likewise.
	* longlong.m4 (CL_LONGLONG): Likewise.
	* times.m4 (CL_TIMES_CLOCK): Likewise.
	Reported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.

2005-12-04  Bruno Haible  <bruno@clisp.org>

	* src/integer/conv/cl_I_to_digits.cc (I_to_digits_noshrink): Set
	erg->len at the end.

2005-12-04  Bruno Haible  <bruno@clisp.org>

	Extend the fixnum range from 32 bits to 61 bits on 64-bit platforms.
	* doc/cln.tex (gcd, jacobi): Take 'long' instead of 'int32' arguments.
	* include/cln/object.h (cl_value_shift): Define as 3, not 32, in the
	64-bit case.
	* include/cln/types.h (intVsize): New macro.
	(sintV, uintV): New types.
	* include/cln/integer.h (gcd): Take uintV arguments.
	* include/cln/numtheory.h (jacobi): Take sintV arguments.
	* src/complex/input/cl_N_read.cc (read_complex): Call FN_to_UV instead
	of FN_to_UL.
	* src/complex/transcendental/cl_C_expt_C.cc: Likewise.
	* src/float/dfloat/elem/cl_DF_scale_I.cc: Use uintV instead of uintL
	* src/float/dfloat/elem/cl_DF_from_RA.cc: Don't assume values >= 2^53
	and < 2^55 are always bignums.
	where appropriate.
	* src/float/ffloat/conv/cl_RA_to_float.cc: Call FN_to_UV instead of
	FN_to_UL.
	* src/float/ffloat/elem/cl_FF_from_RA.cc: Likewise.
	* src/float/ffloat/elem/cl_FF_scale_I.cc: Call FN_to_V instead of
	FN_to_L.
	* src/float/lfloat/elem/cl_LF_scale_I.cc: Likewise.
	* src/float/output/cl_F_dprint.cc: Likewise.
	* src/float/sfloat/elem/cl_SF_from_RA.cc: Call FN_to_UV instead of
	FN_to_UL.
	* src/float/sfloat/elem/cl_SF_scale_I.cc: Call FN_to_V instead of
	FN_to_L.
	* src/integer/cl_I.h (FN_to_UV): Renamed from FN_to_UL, change return
	type.
	(FN_to_V): Renamed from FN_to_L, change return type.
	(FN_V_zerop): Renamed from FN_L_zerop.
	(FN_V_minusp): Renamed from FN_L_minusp.
	(cl_I_constructor_from_L2, cl_I_constructor_from_UL2): Define as an
	inline function on 64-bit platforms.
	(V_to_I, UV_to_I): New macros.
	(pFN_maxlength_digits_at): Return an uintV instead of an uint32.
	(set_pFN_maxlength_digits_at): Take an uintV instead of an uint32.
	* src/integer/algebraic/cl_I_sqrtp.cc: Call FN_to_UV instead of
	FN_to_UL.
	* src/integer/bitwise/cl_I_ash_I.cc: Call FN_to_V instead of FN_to_L.
	* src/integer/bitwise/cl_I_ilength.cc: Likewise.
	* src/integer/bitwise/cl_I_log_aux.cc: Likewise.
	* src/integer/bitwise/cl_I_logbitp_I.cc: Likewise.
	* src/integer/bitwise/cl_I_logcount.cc: Likewise.
	* src/integer/bitwise/cl_I_logtest.cc: Likewise.
	* src/integer/conv/cl_I_from_L2.cc: Don't produce code on 64-bit
	platforms.
	* src/integer/conv/cl_I_from_UL2.cc: Likewise.
	* src/integer/conv/cl_I_from_NDS.cc: Update.
	* src/integer/conv/cl_I_from_Q.cc: Remove cast to sint32.
	* src/integer/conv/cl_I_from_UQ.cc: Remove cast to uint32.
	* src/integer/conv/cl_I_to_L.cc: Check again fixnum that needs more
	than 32 bits.
	* src/integer/conv/cl_I_to_Q.cc: Call FN_to_V instead of FN_to_L.
	* src/integer/conv/cl_I_to_UL.cc: Likewise.
	* src/integer/conv/cl_I_to_UQ.cc: Likewise.
	* src/integer/elem/cl_I_div.cc: Treat fixnums that need more than 32
	bits like bignums.
	* src/integer/elem/cl_I_minus.cc: Call FN_to_V instead of FN_to_L.
	* src/integer/elem/cl_I_mul.cc: Likewise.
	* src/integer/elem/cl_I_plus.cc: Likewise.
	* src/integer/elem/cl_I_square.cc: Likewise.
	* src/integer/elem/cl_I_uminus.cc: Likewise.
	* src/integer/gcd/cl_I_gcd.cc: Likewise.
	* src/integer/gcd/cl_low_gcd.cc (gcd): Take uintV arguments.
	* src/integer/hash/cl_I_hashcode.cc: Call FN_to_V instead of FN_to_L.
	* src/integer/input/cl_I_read.cc (read_integer): Call FN_to_UV instead
	of FN_to_UL.
	* src/integer/misc/cl_I_ord2.cc (ord2): Call ord2_64 on 64-bit
	platforms.
	* src/integer/misc/cl_I_power2p.cc: Call FN_to_UV instead of FN_to_UL.
	* src/integer/misc/combin/cl_I_doublefactorial.cc (doublefakul_table):
	Extend table for larger fixnums.
	(doublefactorial): Update.
	* src/integer/misc/combin/cl_I_factorial.cc (fakul_table): Extend table
	for larger fixnums.
	(factorial): Update.
	* src/modinteger/cl_MI_fix16.h: Call FN_to_UV instead of FN_to_UL.
	* src/modinteger/cl_MI_fix29.h: Likewise.
	* src/modinteger/cl_MI_fix32.h: Likewise.
	* src/modinteger/cl_MI_std.h: Likewise.
	* src/numtheory/cl_nt_cornacchia4.cc: Call FN_to_V instead of FN_to_L.
	* src/numtheory/cl_nt_jacobi.cc: Likewise.
	* src/numtheory/cl_nt_jacobi_low.cc (jacobi_aux): Take uintV arguments
	instead of uint32 arguments.
	(jacobi): Take sintV argument instead of a sint32 argument.
	* src/rational/input/cl_RA_read.cc: Call FN_to_UV instead of FN_to_UL.
	* src/real/input/cl_R_read.cc: Likewise.
	* src/vector/cl_GV_I.cc: Likewise.
	* tests/timefact.cc: Call FN_to_V instead of FN_to_L.

2005-12-04  Bruno Haible  <bruno@clisp.org>

	More complete 64-bit division macros.
	* src/base/cl_low.h (divu_6432_3232_w): Choose a different macro
	expansion on x86_64.
	(divu_6432_6432): New macro.
	(divu_6464_6464): Choose a different macro expansion for all CPUs
	except sparc64 and x86_64.
	(divu_12864_6464): Define NEED_VAR_divu_64_rest here.
	* src/base/low/cl_low_div.cc (divu_64_rest): Avoid defining it twice.
	(divu_6464_6464_): New function.

2005-12-04  Bruno Haible  <bruno@clisp.org>

	* src/base/cl_low.h (ord2_64): New macro.

2005-12-02  Bruno Haible  <bruno@clisp.org>

	* src/base/cl_low.h (mulu64) [x86_64]: Change asm restriction, since
	mulq doesn't accept immediate arguments.

2005-11-26  Bruno Haible  <bruno@clisp.org>

	* src/base/cl_low.h (GENERIC_INTEGERLENGTH32): New macro.
	(integerlength64): Define using integerlength32 if integerlength32
	is not defined generically.

2005-11-26  Bruno Haible  <bruno@clisp.org>

	* src/base/cl_low.h (mulu32) [SPARC64]: Remove rd instruction, since
	umul returns the complete 64-bit product in a register.
	(mulu32_w) [SPARC64]: Prefer umul over mulx instruction.
	(divu_6432_3232_w) [SPARC64]: Prefer umul/udiv over mulx/udivx
	instructions.

2005-11-26  Bruno Haible  <bruno@clisp.org>

	* src/base/cl_low.h (divu_3216_1616): Prepend underscore to local
	variables.

2005-11-26  Bruno Haible  <bruno@clisp.org>

	* src/base/cl_low.h (ord2_32): Parenthesize macro argument.

2005-12-17  Richard B. Kreckel  <kreckel@ginac.de>

	* Created branch cln_1-1 for maintenance patches.
	This is the main branch, which will eventually become CLN 1.2.0.

2005-12-15  Dmitry V. Kustov  <kustov@telex221.ru>

	* src/base/random/cl_random_from.cc: Add support for OpenBSD.

2005-11-23  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.1.11 released.

2005-11-20  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/conv/cl_I_cached_power.h: New file.
	* src/integer/conv/cl_I_cached_power.cc: New file.
	Contains power_table and cached_power_table previously...
	* src/integer/conv/cl_I_to_digits.cc: ...here.
	* src/integer/conv/cl_I_from_digits.cc: Use cached powers.

2005-11-02  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/conv/cl_I_from_digits.cc: Made input of all numbers in
	non-power-of-two base much faster.
	* tests/test_I_io.cc: New file...
	* tests/Makefile.in, tests/test_I.cc: ...used here.

2005-10-22  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.1.10 released.

2005-10-22  Richard B. Kreckel  <kreckel@ginac.de>

	* src/Makefile.in: Accept CPPFLAGS from environment.
	* examples/Makefile.in: Likewise.
	* benchmarks/Makefile.in: Likewise.
	* tests/Makefile.in: Likewise.

2005-08-30  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h (CL_OUTPUT_LABEL): Work around redundant
	duplication of basic blocks on m68k.

2005-08-30  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h (CL_JUMP_TO): Fix mips* brokenness.

2005-08-27  Bruno Haible  <bruno@clisp.org>

	Split aclocal.m4 into individual files.
	* m4/alloca.m4, m4/as-underscore.m4, m4/c++-constructors.m4:
	* m4/fpu_control.m4, m4/general.m4, m4/gettimeofday.m4:
	* m4/longdouble.m4, m4/longlong.m4, m4/param.m4, m4/perror.m4:
	* m4/proto.m4, m4/rusage.m4, m4/times.m4:
	New files, extracted from autoconf/aclocal.m4.
	* autoconf/aclocal.m4: m4_include them.
	* Makefile.devel (AUTOCONF_MACROS): New variable.
	(configure): Depend on it.
	(CLISP_M4DIR): Remove variable.
	(autoconf/aclocal.m4): Remove rule.

2005-08-27  Bruno Haible  <bruno@clisp.org>

	* src/integer/bitwise/cl_I_ash_I.cc (ash): Avoid shifting a 32-bit
	zero value by more than 31 bits.

2005-08-27  Bruno Haible  <bruno@clisp.org>

	Make the long-float overflow check work on 64-bit platforms.
	* src/float/lfloat/cl_LF.h (LF_exp_mid, LF_exp_high): Define as
	'unsigned int', not 'unsigned long'.

2005-08-27  Bruno Haible  <bruno@clisp.org>

	* include/cln/modules.h (CL_OUTPUT_LABEL): Work around redundant
	duplication of basic blocks by g++ 4.0.
	See <http://gcc.gnu.org/bugzilla/show_bug.cgi?id=23345>.

2005-08-27  Bruno Haible  <bruno@clisp.org>

	Make it possible to cross-compile CLN.
	* m4/intparam.m4: New file.
	* m4/floatparam.m4: New file.
	* autoconf/aclocal.m4: Include both.
	(CL_MACHINE): Add an additional CROSS_MACRO parameter.
	* configure.ac (CL_MACHINE): When cross-compiling, use
	CL_INTPARAM_CROSS and CL_FLOATPARAM_CROSS.

2005-08-27  Bruno Haible  <bruno@clisp.org>

	Define HAVE_LONGLONG and HAVE_LONGDOUBLE when cross-compiling.
	* autoconf/aclocal.m4 (CL_LONGLONG, CL_LONGDOUBLE): When cross-
	compiling, use the test code from gnulib.

2005-08-27  Bruno Haible  <bruno@clisp.org>

	* autoconf/aclocal.m4 (CL_RUSAGE): Fix error when cross-compiling.

2005-08-16  Richard B. Kreckel  <kreckel@ginac.de>

	The patch of 2005-05-01 made it impossible to test the type of a cl_UP
	by comparing with &cl_class_univpoly_ring. We need an alternative:
	* include/cln/object.h (cl_class_flags_modint_ring): New #define...
	* src/polynomial/elem/cl_UP.cc (cl_class_univpoly_ring): ...used here.
	* src/polynomial/elem/cl_UP_GF2.h: Likewise.
	* src/polynomial/elem/cl_UP_MI.h: Likewise.
	* src/polynomial/elem/cl_UP_gen.h: Likewise.
	* src/polynomial/elem/cl_UP_number.h: Likewise.

2005-08-15  Richard B. Kreckel  <kreckel@ginac.de>

	* m4/cc.m4 (CL_AS_NOEXECSTACK): New macro...
	* configure.ac: ...used here for setting ASMFLAGS...
	* src/Makefile.in: ...which are used here.

2005-08-02  Andreas Jochens  <aj@andaco.de>

	* include/cln/config.h.in: Add support for PowerPC 64 CPU.
	* include/cln/modules.h: Likewise.
	* include/cln/object.h: Likewise.
	* include/cln/types.h: Likewise.

2005-07-24  Richard B. Kreckel  <kreckel@ginac.de>

	Make out of the box build on x86_64 system with complete 32 bit
	userland possible
	* include/cln/config.h.in: Don't #define __x86_64__ when
	__i386__ is defined.
	* src/base/digitseq/cl_asm_x86_64_.cc: New file.
	* doc/cln.tex: Revert workaround description introduced 2005-05-02.

2005-06-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* Makefile.in: Don't enter nonexisting directories.

2005-05-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	Speed up the linking step
	* src/Makefile.in: Use -objectlist for linking libcln.la.

2005-05-15  Richard B. Kreckel  <kreckel@ginac.de>

	* autoconf/ltmain.sh: Upgrade to libtool-1.5.16.
	* m4/libtool.m4: Upgrade to libtool-1.5.16 (without Comeau patch).

2005-05-02  Richard B. Kreckel  <kreckel@ginac.de>

	* doc/cln.tex: Document what to do on a x86_64 machine with 32-bit
	userland.

2005-05-01  Richard B. Kreckel  <kreckel@ginac.de>

	Fix crashes in find_univpoly_ring and related functions
	* include/cln/modinteger.h: Remove vptr from cl_heap_modint_ring;
	remove declaration of cl_class cl_class_modint_ring.
	* include/cln/univpoly.h: Remove vptr from cl_heap_univpoly_ring;
	remove declaration of cl_class_univpoly_ring.
	* include/cln/object.h: cl_class_flags_modint_ring: New #define...
	* src/modinteger/cl_MI.cc: ...used in cl_class_modint_ring.
	* src/modinteger/cl_MI_fix16.h: No vptr, but static dtor and type flag.
	* src/modinteger/cl_MI_fix29.h: Likewise.
	* src/modinteger/cl_MI_fix32.h: Likewise.
	* src/modinteger/cl_MI_int32.h: Likewise.
	* src/modinteger/cl_MI_montgom.h: Likewise.
	* src/modinteger/cl_MI_pow2: Likewise.
	* src/modinteger/cl_MI_pow2m1.h: Likewise.
	* src/modinteger/cl_MI_pow2p1.h: Likewise.
	* src/modinteger/cl_MI_std.h: Likewise.
	* src/polynomial/elem/cl_UP.cc (cl_make_univpoly_ring): Compare with
	cl_class_flags_modint_ring, not with cl_class_modint_ring.
	* src/polynomial/elem/cl_UP_GF2.h (cl_class_num_univpoly_ring): New.
	* src/polynomial/elem/cl_UP_MI.h (cl_class_modint_univpoly_ring): New.
	* src/polynomial/elem/cl_UP_gen.h (cl_class_gen_univpoly_ring): New.
	* src/polynomial/elem/cl_UP_number.h (cl_class_num_univpoly_ring): New.
	Reported by Ralf Goertz <R_Goertz@web.de>.

2005-04-29  Richard B. Kreckel  <kreckel@ginac.de>
	    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* m4/cc.m4: Emit a warning if g++ is used and optimization turned off.

2005-04-24  Richard B. Kreckel  <kreckel@ginac.de>

	Make GCC compiler flags default to -O
	* m4/cc.m4: New file...
	* configure.ac: ...used here.
	* autoconf/aclocal.m4: Regenerate.

2005-04-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* include/cln/string.h: Declare cl_string.

2005-03-17  Richard B. Kreckel  <kreckel@ginac.de>

	* autoconf/ltmain.sh: Upgrade to libtool-1.5.14.
	* m4/libtool.m4: Upgrade to libtool-1.5.14 with Comeau patch.
	* autoconf/aclocal.m4: Regenerate.

2005-03-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* src/Makefile.in: Use $CXX instead of $CC when linking.

2005-02-27  Richard B. Kreckel  <kreckel@ginac.de>
	
	* examples/perfnum.cc: update to presumed 42st Mersenne prime.

2004-11-28  Richard B. Kreckel  <kreckel@ginac.de>

	Disambiguate binary operators of CLN types with float/double
	* include/cln/dfloat.h: Add binary operator overloads for arguments of
	type double.
	* include/cln/ffloat.h: Likewise, for arguments of type float.
	* include/cln/float.h: Likewise, both for arguments of types double and
	float.
	* include/cln/real.h: Likewise.
	Reported by Isidro Cachadiña Gutiérrez <icacha@unex.es>.

2004-11-03  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.1.9 released.

2004-10-28  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	* src/Makefile.in: Let config.status set LDFLAGS.

2004-10-27  Peter Breitenlohner  <peb@mppmu.mpg.de>

	* cln.pc.in: Fix typo.
	* Makefile.in (INSTALL_SCRIPT): Added, to be used for scripts like
	cln-config.  Allows us to do special things to binaries, like
	installing them with install -s.
	* doc/Makefile.in: add/remove the cln.info from the installed
	$(infodir)/dir unless this is debian install-info (code copied from
	what GNU automake would produce).

2004-10-26  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/input/cl_I_read_stream.cc (read_integer): Fix a bug
	that caused radix specifiers to not work when reading from a stream.
	* src/rational/input/cl_RA_read_stream.cc (read_rational): Likewise.
	* src/real/input/cl_R_read_stream.cc (read_real): Likewise.
	* src/float/input/cl_F_read_stream.cc (read_float): Likewise.
	* src/complex/input/cl_N_read_stream.cc (read_complex): Likewise.

2004-10-25  Richard B. Kreckel  <kreckel@ginac.de>

	* src/base/cl_low.h: Add mulu64 assembler macro for ia64.

2004-10-24  Richard B. Kreckel  <kreckel@ginac.de>

	* src/base/cl_low.h: Add mul and div macros for x86_64.

2004-10-23  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/conv/cl_I_from_digits.cc (digits_to_I): Fix thinko in
	new code for base power of two.

2004-10-22  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/conv/cl_I_to_digits (I_to_digits): Fix an elusive stack
	overwriting problem. That was the real cause for Debian bug#246319.
	* src/integer/output/cl_I_print.cc (print_integer): Revert workaround
	for the bug fixed above.

2004-10-20  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/types.h: Use 64 bit digits on x86_64 CPU.

2004-10-12  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/conv/cl_I_from_digits.cc (digits_to_I): Speedup when
	the base is a power of two.

2004-10-05  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/conv/cl_I_to_digits.cc (I_to_digits): Fix bug in base 32.

2004-09-27  Richard B. Kreckel  <kreckel@ginac.de>

	Support for little-endian Mips, second shot
	* src/base/digitseq/cl_asm_mipsel_.cc: New file...
	* src/base/digitseq/cl_asm_cc: ...used here.
	* src/base/digitseq/cl_asm.h: Include cl_asm_mips.h for any endianness.
	* include/cln/object.h: Set alignment for mipsel explicitly.

2004-09-05  Richard B. Kreckel  <kreckel@ginac.de>

	Support for little-endian Mips
	* include/cln/config.h.in: Add __mipsel__.
	* include/cln/modules.h: For Mips, this is endianness-agnostic.
	* src/base/digitseq/cl_asm_.cc, src/base/digitseq/cl_asm.h:
	Mask out assembler for little-endian Mips.

2004-08-30  Bruno Haible  <bruno@clisp.org>

	* benchmarks/timebench2.sh: Multiply all repeat counts by 100.
	* benchmarks/timebench2.results: Add recent PowerPC G4 results.

2004-08-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* examples/e.cc: remove extra semicolon.

2004-08-25  Bruno Haible  <bruno@clisp.org>

	* autoconf/ltmain.sh: Upgrade to libtool-1.5.6.
	* m4/libtool.m4: New file, from libtool-1.5.6 with modifications:
	2004-08-22  Bruno Haible  <bruno@clisp.org>
	  * m4/libtool.m4: Add support for Comeau C++ on Linux.
	  Reported by Prof. Roberto Bagnara <bagnara@cs.unipr.it>.
	* autoconf/aclocal.m4: Regenerate.

2004-08-19  Bruno Haible  <bruno@clisp.org>

	* include/cln/modules.h (CL_GLOBALIZE_JUMP_LABEL, CL_JUMP_TO): When
	converting a label to a string, use ASM_UNDERSCORE_PREFIX. Needed on
	MacOS X.
	Reported by Darren Bane <darren.bane@ul.ie>.

2004-07-01  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.1.8 released.

2004-06-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* src/base/cl_macros.h: alloca(3) has size_t argument type.

2004-06-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* include/cln/floatformat.h: Do define a type here.

2004-06-27  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h (CL_JUMP_TO): Fix AMD64 brokenness.

2004-06-23  Bruno Haible  <bruno@clisp.org>

	* configure.ac: Pretend ftime() is not available. Needed by
	CL_TIMES_CLOCK.

2004-06-21  Ralf Stephan  <ralf@ark.in-berlin.de>

	* doc/cln.tex: Document jacobi, isprobprime and nextprobprime.

2004-06-18  Richard B. Kreckel  <kreckel@ginac.de>

	* rational/transcendental/cl_RA_logp.cc: fix bug where base is
	reciprocal of an integer.
	Reported by Niklas Knutsson <nq@altern.org>.

2004-06-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* src/complex/ring/cl_C_ring.cc, src/integer/ring/cl_I_ring.cc,
	src/rational/ring/cl_RA_ring.cc, src/real/ring/cl_R_ring.cc:
	Make template specializations explicit.

2004-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* src/complex/input/cl_N_read.cc, src/float/input/cl_F_read.cc,
	src/integer/input/cl_I_read.cc, src/rational/input/cl_RA_read.cc,
	src/real/input/cl_R_read.cc:  Remove unused labels.

2004-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* benchmarks/timebench1.cc, benchmarks/timebench2a.LiDIA.cc,
	benchmarks/timebench2a.cc, benchmarks/timebench2ap.cc,
	benchmarks/timebench2b.LiDIA.cc, benchmarks/timebench2b.cc,
	examples/atan_recip.cc, examples/atanh_recip.cc,
	examples/contfrac.cc, examples/e.cc, examples/legendre.cc,
	examples/lucaslehmer.cc, examples/pi.cc, include/cln/GV.h,
	include/cln/SV.h, include/cln/malloc.h, include/cln/modules.h,
	include/cln/object.h, include/cln/string.h, src/base/cl_abort.cc,
	src/base/cl_alloca.h, src/base/cl_malloc.cc,
	src/base/random/cl_random_from.cc,
	src/base/string/cl_spushstring_append.cc,
	src/base/string/cl_spushstring_push.cc,
	src/base/string/cl_st_debug.cc,
	src/base/string/input/cl_st_gettoken.cc,
	src/complex/input/cl_N_read.cc, src/float/input/cl_F_read.cc,
	src/float/output/cl_F_dprint.cc, src/integer/input/cl_I_read.cc,
	src/rational/input/cl_RA_read.cc,
	src/real/format-output/cl_fmt_integer.cc,
	src/real/format-output/cl_fmt_paddedstring.cc,
	src/real/input/cl_R_read.cc, src/timing/cl_t_current.cc,
	src/timing/cl_t_current2.cc, tests/exam.cc, tests/tests.cc,
	tests/timeLFRAmul.cc, tests/timeLFatan-compare.cc,
	tests/timeLFatan.cc, tests/timeLFatanh-compare.cc,
	tests/timeLFatanh.cc, tests/timeLFcos-compare.cc, tests/timeLFcos.cc,
	tests/timeLFcosh.cc, tests/timeLFexp-compare.cc, tests/timeLFexp.cc,
	tests/timeLFln-compare.cc, tests/timeLFln.cc,
	tests/timeLFsin-compare.cc, tests/timeLFsin.cc, tests/timeLFsinh.cc,
	tests/timeLFsqrt.cc, tests/timeMImisc5.cc, tests/timeMIpow2div.cc,
	tests/timeMIpow2recip.cc, tests/timeRALFdiv.cc, tests/timeRAtoLF.cc,
	tests/timeUPMImul.cc, tests/timecatalan.cc, tests/timediv.cc,
	tests/timediv2adic-compare.cc, tests/timediv2adic.cc,
	tests/timeeuler.cc, tests/timeexp1.cc, tests/timefact.cc,
	tests/timegcd.cc, tests/timemul-compare.cc, tests/timemul.cc,
	tests/timepi.cc, tests/timeprint-compare.cc, tests/timeprint.cc,
	tests/timerecip2adic-compare.cc, tests/timerecip2adic.cc,
	tests/timesqrt.cc, tests/timesqrtmodp.cc, tests/timesquare.cc,
	tests/timezeta3.cc: Change all C include headers to ISO style
	within C++ code.

2004-06-10  Richard B. Kreckel  <kreckel@ginac.de>

	* examples/perfnum.cc: update to presumed 41st Mersenne prime.

2004-05-02  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.1.7 released.

2004-05-02  Richard B. Kreckel  <kreckel@ginac.de>

	* examples/pi.cc and examples/pi.1: New files.
	* examples/Makefile.in: Build the pi executable.

2004-05-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* src/Makefile.in: Fix for parallel build: wait for subdir objects to
	be finished before creating the library.

2004-04-30  Richard B. Kreckel  <kreckel@ginac.de>

	* src/integer/output/cl_I_print.cc (print_integer): workaround
	GCC compiler bug (cf. Debian bug#246319).

2004-03-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* m4/gmp.m4 (CL_GMP_CHECK): Do not lose LIBS setting with config.cache
	enabled.

2004-03-08  Bruno Haible  <bruno@clisp.org>

	* src/float/lfloat/elem/cl_LF_mul.cc (operator*): Fix the second
	underflow condition.
	* src/float/lfloat/algebraic/cl_LF_sqrt.cc (sqrt): Fix a bug with large
	uexp whereby SQRT of MOST-POSITIVE-LONG-FLOAT was less than 1.

2004-03-04  Richard B. Kreckel  <kreckel@ginac.de>

	* Makefile.in (install): Add ${srcdir} for cln.m4.
	* m4/gmp.m4: quote macro names.
	Reported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.

2004-01-01  Richard B. Kreckel  <kreckel@ginac.de>

	* Version 1.1.6 released.

2004-01-01  Richard B. Kreckel  <kreckel@ginac.de>

	* include/cln/univpoly.h, include/cln/univpoly_complex.h,
	  include/cln//univpoly_integer.h, include/cln/univpoly_modint.h,
	  include/cln/univpoly_rational.h, include/cln/univpoly_real.h,
	  src/polynomial/elem/cl_UP_GF2.h, src/polynomial/elem/cl_UP_MI.h,
	  src/polynomial/elem/cl_UP_gen.h, src/polynomial/elem/cl_UP_no_ring.cc,
	  src/polynomial/elem/cl_UP_number.h (ldegree): New function.
	* doc/cln.tex: Document `ldegree'.

2003-12-29  Richard B. Kreckel  <kreckel@ginac.de>

	Rework of autoconfiscation infrastructure
	* autoconf/config.{guess,sub}: Update to GNU version 2003-10-07.
	* autoconf/ltmain.sh: Update to GNU version 1.4.3.
	* autoconf/autoconf: Remove (from now on we assume autoconf is
	  installed properly on the sytem).
	* autoconf/autoconf.m4: Likewise.
	* autoconf/autoconf.m4f: Likewise.
	* autoconf/acgeneral.m4: Likewise.
	* autoconf/acspecific.m4: Likewise.
	* autoconf/aclocal.m4: Regenerate.
	* autoconf/acinclude.m4: Remove (while moving the macros...)
	* m4/gmp.m4: New file (...to here).
	* Makefile.devel: Update to new scheme.
	* configure.ac: Likewise.
	* include/cln/GV_integer.h: Assume template specializations work.
	* include/cln/GV_modinteger.h: Likewise.
	* include/cln/config.h.in: Likewise, and drop HAVE_BOOL.
	* src/base/cl_base_config.h.in: Drop support for obsolete ftime(3).
	* src/base/random/cl_random_from.cc: Likewise.
	* src/timing/cl_base_config.h.in: Likewise.
	* src/timing/cl_t_current.cc: Likewise.

2003-12-27  Richard B. Kreckel  <kreckel@ginac.de>

	* src/polynomial/cl_UP_gen.h (gen_minus): Fix case where first
	  argument is zero.
	* src/polynomial/cl_UP_MI.h (modint_minus): Likewise.
	* src/polynomial/cl_UP_number.h (num_minus): Likewise.
	Reported by Munagala Ramanath <amberarrow@yahoo.com>.

2003-12-02  Richard B. Kreckel  <kreckel@ginac.de>

	* examples/perfnum.cc: update to presumed 40th Mersenne prime.

2003-11-20  Christian Bauer  <cbauer@ginac.de>

	Added pkg-config support
	* cln.pc.in: New file.
	* Makefile.in: Take care of cln.pc.
	* configure.ac: Likewise.

2003-08-06  Richard B. Kreckel  <kreckel@ginac.de>

	* src/numtheory/cl_nt_sqrtmodp.cc: #undef _R.
	Reported by Andrew Rechnitzer <A.Rechnitzer@ms.unimelb.edu.au>.

2003-08-01  Richard Kreckel  <kreckel@ginac.de>

	More dependent base resolution issues
	* src/base/hash/cl_hash.h (cl_heap_hashtable<T>::iterator()): 
	portable syntactic simplification.
	* src/base/hash/cl_hashset.h: Preceed inherited members with this->.
	* src/base/hash/cl_hash1.h: Likewise for member functions.
	* src/base/hash/cl_hash2.h: Likewise.
	* src/base/hash/cl_hashuniq.h: Likewise.
	* src/base/hash/cl_hashuniqweak.h: Likewise.
	* src/base/hash/cl_hash.h: Revert explicit static member function
	lookup since that was GCC's fault.
	* src/base/hash/cl_hash2weak.h: Likewise.
	* src/base/hash/cl_hashuniqweak.h: Likewise.

2003-06-29  Richard Kreckel  <kreckel@ginac.de>

	Dependent base resolution needed for GCC-3.4
	* include/cln/GV.h: Preceed inherited members with this->.
	* include/cln/SV.h: Likewise.
	* include/cln/object.h: Likewise.
	* src/base/hash/cl_hash1.h: Likewise.
	* src/base/hash/cl_hash1weak.h: Likewise.
	* src/base/hash/cl_hash2.h: Likewise.
	* src/base/hash/cl_hashuniq.h: Likewise.
	* src/base/hash/cl_hash.h: Make lookup of static member function 
	explicit.
	* src/base/hash/cl_hash2weak.h: Likewise.
	* src/base/hash/cl_hashuniqweak.h: Likewise.
	* src/modinteger/cl_MI.cc: Make shell-comment a C-comment. Geez.

2003-02-24  Bruno Haible  <bruno@clisp.org>

	* src/base/random/cl_random_from.cc (random_state::random_state): Add
	support for MacOS X.
	* src/modinteger/cl_MI.cc: #undef _R.
	Reported by Erann Gat <gat@jpl.nasa.gov>.

2002-08-03  Joerg Arndt  <jj@suse.de>

	* include/cln/config.h.in: Add support for x86_64 CPU.
	* include/cln/modules.h: Likewise.
	* include/cln/types.h: Likewise.
	* include/cln/object.h: Likewise.

2002-06-08  Richard Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_asm.h: ensure intCsize==16 when including
	m68k Assembler routines.
	* src/base/digitseq/cl_asm_.cc: Likewise.

2002-05-28  Richard Kreckel  <kreckel@ginac.de>

	* Version 1.1.5 released.

2002-05-27  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h (CL_CONCATENATE): New macro.

2002-05-10  Richard Kreckel  <kreckel@ginac.de>

	* doc/cln.tex (Building the library): Update recommendations for 
	compiling on Tru64 using g++ 3.0 and 3.1.
	* README: Update homepage.

2002-05-05  Bruno Haible  <bruno@clisp.org>

	* doc/cln.tex (Building the library): Give some recommendations for
	g++ 3.0 and 3.1.

	Force link-time references despite optimizations done by g++ 2.95
	and newer.
	* include/cln/modules.h (CL_FORCE_LINK): New macro.
	* Use CL_FORCE_LINK.
	* include/cln/GV_integer.h (cl_GV_I_debug_dummy): Likewise.
	* include/cln/GV_number.h (cl_GV_number_debug_dummy): Likewise.
	* include/cln/SV_number.h (cl_SV_number_debug_dummy): Likewise.
	* include/cln/SV_ringelt.h (cl_SV_ringelt_debug_dummy): Likewise.
	* include/cln/dfloat.h (cl_DF_debug_dummy): Likewise.
	* include/cln/ffloat.h (cl_FF_classes_dummy, cl_FF_debug_dummy):
	Likewise.
	* include/cln/integer.h (cl_I_classes_dummy, cl_I_debug_dummy):
	Likewise.
	* include/cln/lfloat.h (cl_LF_debug_dummy): Likewise.
	* include/cln/modinteger.h (cl_MI_debug_dummy): Likewise.
	* include/cln/rational.h (cl_RA_debug_dummy): Likewise.
	* include/cln/real.h (cl_R_debug_dummy): Likewise.
	* include/cln/ring.h (cl_ring_debug_dummy): Likewise.
	* include/cln/sfloat.h (cl_SF_classes_dummy, cl_SF_classes_dummy):
	Likewise.
	* include/cln/string.h (cl_string_debug_dummy): Likewise.
	* include/cln/univpoly.h (cl_UP_debug_dummy): Likewise.
	* src/float/base/cl_ieee.h (cl_ieee_dummy_NNN): Likewise.

	Avoid g++ 3.1 warnings.
	* src/base/cl_offsetof.h (offsetof): Redefine each time.
	* src/base/digitseq/cl_DS.h: Include "cl_offsetof.h" after <gmp.h>.

	Avoid g++ 3.1 warnings.
	* src/base/hash/cl_hash.h (struct cl_heap_hashtable): Use typename
	where needed.
	* src/base/hash/cl_hash1.h (struct cl_heap_hashtable_1): typedef
	htxentry as a shortcut.
	* src/base/hash/cl_hash2.h (struct cl_heap_hashtable_2): Likewise.
	* src/base/hash/cl_hashset.h (struct cl_heap_hashtable_set): Likewise.
	* src/base/hash/cl_hashuniq.h (struct cl_heap_hashtable_uniq):
	Likewise.

2002-03-15  Bruno Haible  <bruno@clisp.org>

	* cln.tex: Document problem with GNU make 3.77.
	Reported by Michael Somos <somos@grail.cba.csuohio.edu>.

2002-02-16  Richard Kreckel  <kreckel@ginac.de>

	* cln.m4: quote macro name.
	  Pointed out by Roberto Bagnara.

2002-01-20  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/config.{guess,sub}: Update to GNU version 2002-01-02.
	  (the old one was broken on Linux/Mips.)

2002-01-04  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/autoconf.m4f: get brutal in order to adhere to FHS.
	* Version 1.1.4 released.

2002-01-03  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/acinclude.m4: revamp MPN-matcher.
	* autoconf/aclocal.m4: upgrade to autoconf-2.52 infrastructure,
	  sync with CLisp from CVS.
	* autoconf/autoconf: Likewise.
	* autoconf/autoconf.m4f: Likewise (new file).
	* configure.ac: Likewise (new file, replaces configure.in).
	* configure.in: Likewise (deleted, replaced by configure.ac).
	* autoconf/config.{guess,sub}: Update to GNU version 2001-12-13.
	* src/Makefile.in: made VPATH safe for autoconf-2.52.
	* include/cln/config.h.in: Add __s390__.

2001-12-31  Richard Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_DS.h: <gmp.h> is not included extern "C"
	  any more since GMP4 has some C++ support in it.

2001-12-14  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h, include/cln/object.h: add support for
	  s390.
	* src/numtheory/cl_nt_sqrtmodp.cc: workaround for GCC2.x compiler-bug
	  on s390, provided by Gerhard Tonn.

2001-11-05  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/ltmain.sh: Upgrade to libtool-1.4.2.
	* autoconf/config.{guess,sub}: Update to GNU version 2001-09-07.
	* Version 1.1.3 released.

2001-11-04  Bruno Haible  <haible@clisp.cons.org>

	Interoperability with gcc-3.0 -fuse-cxa-atexit.
	* autoconf/aclocal.m4 (CL_GLOBAL_CONSTRUCTORS): Add test whether
	  global destructors actually exist.
	* include/cln/modules.h (CL_PROVIDE, CL_PROVIDE_END, CL_PROVIDE_END):
	  Don't hack the global destructors if there is no global destructors
	  function.

2001-11-03  Richard Kreckel  <kreckel@ginac.de>

	* src/float/transcendental/cl_F_sinx.cc (sinx_naive): For small
	  values of x, return square(x) instead of x.
	* src/float/transcendental/cl_F_sinhx.cc (sinhx_naive): Likewise.

2001-07-25  Richard Kreckel  <kreckel@ginac.de>

	* Version 1.1.2 released.

2001-07-24  Richard Kreckel  <kreckel@ginac.de>

	* src/base/hash/cl_hash.h: declare _cl_hashtable_iterator<htentry> a
	  friend of cl_heap_hashtable<htentry>.

2001-07-22  Richard Kreckel  <kreckel@ginac.de>

	* src/float/base/cl_ieee.cc: try to do magic to the FPU only if
	  _FPU_IEEE is really defined.
	* include/cln/modules.h: change assembler labels from `label' to
	  `label:' on hppa, needed by Linux (see comment).
	* autoconf/acinclude.m4: new file (for storing CLN-specific macros).
	* Makefile.devel: adjusted.
	* autoconf/aclocal.m4: regenerate.
	* src/base/low/cl_low_mul.cc: moved POD variables that are declared
	  extern "C" elsewhere out of the namespace.
	* src/base/low/cl_low_div.cc: Likewise.

2001-06-08  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/config.{guess,sub}: Update to GNU version 2001-05-11.
	* autoconf/aclocal.m4: Upgrade to libtool-1.4.
	* autoconf/ltmain.sh: Likewise.
	* autoconf/ltconfig: Remove file.
	* autoconf/install-sh: New file.
	* configure.in: Add AC_CONFIG_AUX_DIR call.

2001-06-05  Richard Kreckel  <kreckel@ginac.de>

	* tests/tests.cc: resolve namespace ambiguity about strcmp().

2001-05-31  Richard Kreckel  <kreckel@ginac.de>

	* Version 1.1.1 released.

2001-05-28  Richard Kreckel  <kreckel@ginac.de>

	* cln/cln.tex: documented problems with shared library on Sparc
	  using gcc older than 2.95.3.
	* configure.in: Fixed typos in versioning docu.

2001-05-25  Bruno Haible  <haible@clisp.cons.org>

	* src/base/digitseq/cl_asm_arm_.cc: Use #0x instead of #& to designate
	  hexadecimal constants.

2001-05-25  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/floatparam.c (double_wordorder_bigendian_p): new symbol.
	* src/float/dfloat/cl_DF.h: Check for double_wordorder_bigendian_p.
	* Removed LiDIA interface since that is now outdated (namespace cln)
	  and maintained elsewhere.
	* Adjusted dates and final touches for 1.1.1.

2001-05-19  Richard Kreckel  <kreckel@ginac.de>

	* INSTALL: Update toolchain info: no egcs, some more platforms.
	* doc/cln.tex: Likewise.

2001-05-18  Richard Kreckel  <kreckel@ginac.de>

	* src/base/cl_low.h: prepended variables declared inside macros
	  with underscore.  Fixes equal_hashcode() on various platforms.

2001-04-25  Richard Kreckel  <kreckel@ginac.de>

	* src/base/cl_low.h: Added several checks if NO_ASM is defined, so
	  this definition becomes actually useful.  This is needed for 
	  compilation on Arm until somebody fixes the assembler files for Arm.
	* src/base/digitseq/cl_asm.h: Likewise.
	* src/base/digitseq/cl_asm_.cc: Likewise.
	* */Makefile.in: Added `override' in front of `CPPFLAGS +=' so
	   one can say `make CPPFLAGS=-DFOOBAR'.

2001-03-26  Arvid Norberg <c99ang@cs.umu.se>

	* src/base/random/cl_random_from.cc: ported to beos.

2001-03-05  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/modules.h (CL_JUMP_TO): Fix IA64 brokenness.

2001-01-28  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/number.h (cl_as_N): Remove bogus comment.

2001-01-22  Richard Kreckel  <kreckel@ginac.de>

	* configure.in: Make build in separate builddir possible (again).

2001-01-22  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/*.h: Change signatures of all classes' methods
	  cln::cl_foo::operator new(size_t, cl_foo*) to
	  cln::cl_foo::operator new(size_t, void*) so one can declare
	  std::vector<cln::cl_foo>, std::list<cln::cl_foo> etc. for
	  certain STL implementations (like libstdc++-v3).

2000-12-14  Richard Kreckel  <kreckel@ginac.de>

	* Version 1.1 released.

2000-12-13  Richard Kreckel  <kreckel@ginac.de>

	* */*: cl_istream -> std::istream, cl_ostream -> std::ostream.

2000-12-05  Richard Kreckel  <kreckel@ginac.de>

	* Makefile.in, src/Makefile.in, doc/Makefile.in: Use mkdir -p.
	* include/cln/version.h.in, src/base/verion.cc: New files.
	* configure.in: Generate include/cln/version.h.
	* cln.m4: Rewrote it. Check result of cln-config without compiling.
	  Do cross-check library version and header version information.

2000-12-02  Christian Bauer  <cbauer@ginac.de>

	* Makefile.in, src/Makefile.in, doc/Makefile.in: Added $DESTDIR.
	* cln.m4, cln.spec.in: some minor fixes with respect to RPM package
	  building.

2000-11-24  Richard Kreckel  <kreckel@ginac.de>

	* */*: Removed problematic stdin, stdout and stderr definitions.  
	  Use std::cin, std::cout, std::cerr instead (obsoletes 2000-10-29).

2000-11-20  Bruno Haible

	* cln-config.1: change title.

2000-11-18  Richard Kreckel  <kreckel@ginac.de>

	* cln.m4: New file.
	* doc/cln.tex: Document package tools cln-config and cln.m4.
	* Makefile.in: Care about cln.m4.

2000-11-17  Richard Kreckel  <kreckel@ginac.de>

	* cln-config.1: added manpage, as required by a couple of distros.
	* Makefile.in, doc/Makefile.in: target install depends on installdirs.

2000-11-16  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/aclocal.m4 (CL_GMP_SET_UINTD): New macro...
	* configure.in: ...used here.
	* include/cln/config.h.in: Put in macros defined by CL_GMP_SET_UINTD...
	* include/cln/types.h: ...used here.
	* autoconf/acgeneral.m4, autoconf/aclocal.m4: Adhere to FHS.

2000-11-13  Richard Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_asm.h: Test if (intDsize==32) for MIPS and HPPA,
	  in order to guard against an accidented configuration.
	* src/integer/conv/cl_I_to_digits.cc (table): member b_hoch_k of 
	  struct power_table_entry initialized as ULL instead of as UL, if 
	  intDsize==64 (caused misprinting on MIPS w/ GMP).
	* src/base/cl_macros.h (minus_bitm, bitc): implemented ULL, if 
	  HAVE_FAST_LONGLONG.
	* src/integer/bitwise/cl_I_mkfx.cc (mkf_extract): Likewise.
	* src/integer/conv/cl_I_from_L.cc (cl_I_from_L): Added trival 
	  generation of Bignum for intDsize==64 and a notreached-check at end.
	* autoconf/config.guess, autoconf/config.sub: updated from FSF.
	* include/cln/config.h.in: Prepared support for IA64.
	* include/cln/types.h: Likewise.
	* include/cln/object.h: Likewise.
	* include/cln/modules.h: Likewise.
	* src/base/cl_macros.h (nonreturning_function): Likewise (NUE's 
	  compiler claims __GNUC_MINOR__==9).

2000-11-03  Richard Kreckel  <kreckel@ginac.de>

	* src/base/cl_macros.h (bit, minus_bit): changed criterion for ULL from
	  HAVE_DD to HAVE_FAST_LONGLONG.
	* src/base/cl_macros.h (bitm): implemented ULL, if HAVE_FAST_LONGLONG.
	* src/base/cl_low.h: actually no need to include "cln/types.h" here.
	* src/base/cl_low.h (logcount_64): always ULL, independent of HAVE_DD.
	* src/base/random/cl_UL_random.cc (random32): a is always ULL.

2000-11-01  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/object.h (cl_combine): define additional signatures, if
	  HAVE_LONGLONG is defined, in order to keep the compiler happy.
	* src/base/cl_macros.h: include "cln/types.h", since we need HAVE_DD...
	* src/base/cl_macros.h (bit): ...for this macro...
	* src/base/cl_macros.h (minus_bit): ...and this one.
	* src/base/cl_low.h: include "cln/types.h", since we need HAVE_DD...
	* src/base/cl_low.h (logcount_64): ...for this macro.
	* src/base/random/cl_UL_random.cc (random32): if HAVE_DD a is an ULL.
	* src/integer/gcd/cl_I_gcd_aux2.cc (floorDD): fixed algorithmic bug.
	  that turned up when intDsize==32 and cl_word_size==64.
	* src/float/dfloat/elem/cl_DF_div.cc (operator/): fixed a missing cast
	  to uint64 that turned up when intDsize==32 and cl_word_size==64.

2000-10-29  Richard Kreckel  <kreckel@ginac.de>

	* src/real/input/cl_R_read.cc, src/complex/input/cl_N_read.cc:
	  #undef stderr, if it's defined so cln::stderr isn't confused.
	* src/base/input/cl_read_globals.cc: stdin should not be extern.

2000-09-05  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/number.h (As): Fix it in namespace by suffixing `_As'
	  to the appropiate method instead of prefixing `as_'.
	* src/complex/misc/cl_N_as.cc (cl_N_As): Likewise.
	* src/real/misc/cl_R_as.cc (cl_R_As): Likewise.
	* src/rational/misc/cl_RA_as.cc (cl_RA_As): Likewise.
	* src/integer/misc/cl_I_as.cc (cl_I_As): Likewise.
	* src/float/misc/cl_F_as.cc (cl_F_As): Likewise.
	* src/float/sfloat/misc/cl_SF_as.cc (cl_SF_As): Likewise.
	* src/float/lfloat/misc/cl_LF_as.cc (cl_LF_As): Likewise.
	* src/float/ffloat/misc/cl_FF_as.cc (cl_FF_As): Likewise.
	* src/float/dfloat/misc/cl_DF_as.cc (cl_DF_As): Likewise.

2000-09-05  Richard Kreckel  <kreckel@ginac.de>

	* src/complex/transcendental/cl_C_expt_C.cc (expt): fix logic for
	  the 0^y cases.

2000-08-30  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/number.h, cl_number::_as_cl_private_thing(): removed.
	  Rearranged for a clearer distinction between macros and remaining
	  identifiers, so Cint can parse it smoothly.

2000-08-29  Richard Kreckel  <kreckel@ginac.de>

	* include/cln/number.h, the(const cl_number& x): New template
	  function.

2000-08-29  Richard Kreckel  <kreckel@ginac.de>

	* */*: Pushed CLN into a namespace `cln'.  While doing so, the
	  following identifiers got their poor-man's namespace (i.e. the 
	  prefix `cl_') stripped off:
	  cl_catalanconst()        ->  catalanconst()
	  cl_compare()             ->  compare()
	  cl_cos_sin()             ->  cos_sin()
	  cl_cos_sin_t             ->  cos_sin_t
	  cl_cosh_sinh()           ->  cosh_sinh()
	  cl_cosh_sinh_t           ->  cosh_sinh_t
	  cl_decoded_dfloat        ->  decoded_dfloat
	  cl_decoded_ffloat        ->  decoded_ffloat
	  cl_decoded_float         ->  decoded_float
	  cl_decoded_lfloat        ->  decoded_lfloat
	  cl_decoded_sfloat        ->  decoded_sfloat
	  cl_default_float_format  ->  default_float_format
	  cl_default_print_flags   ->  default_print_flags
	  cl_default_random_state  ->  default_random_state
	  cl_double_approx()       ->  double_approx()
	  cl_equal()               ->  equal()
	  cl_equal_hashcode()      ->  equal_hashcode()
	  cl_eulerconst()          ->  eulerconst()
	  cl_find_modint_ring()    ->  find_modint_ring()
	  cl_find_univpoly_ring()  ->  find_univ_poly_ring()
	  cl_float_approx()        ->  float_approx
	  cl_float_format()        ->  float_format()
	  cl_float_format_t        ->  float_format_t
	  cl_free_hook()           ->  free_hook()
	  cl_hermite()             ->  hermite()
	  cl_laguerre()            ->  laguerre()
	  cl_legendre()            ->  legandre()
	  cl_malloc_hook()         ->  malloc_hook()
	  cl_pi()                  ->  pi()
	  cl_tschebychev()         ->  tschebychev()
	  cl_zeta()                ->  zeta()
	  NB: For functions these changes includes all signatures.
	* include/*: moved to include/cln/*, stripped `cl_' off filenames.
	* cln-config.in: new file.

2000-08-26  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/acgeneral.m4 (AC_OUTPUT): Use braces in exec_prefix default
	  value, not parens.

2000-08-18  Bruno Haible  <haible@clisp.cons.org>

	* include/cl_univpoly_modint.h: Fix typo.

2000-07-13  Bruno Haible  <haible@clisp.cons.org>

	* src/float/input/cl_F_read_stream.cc (number_char_p): Accept '_',
	  used as precision marker for floats.
	  Reported by Keith Briggs (in 1998) and Thomas Roessler.
	* src/integer/input/cl_I_read_stream.cc (number_char_p): Likewise.
	* src/rational/input/cl_RA_read_stream.cc (number_char_p): Likewise.
	* src/real/input/cl_R_read_stream.cc (number_char_p): Likewise.
	* src/complex/input/cl_N_read_stream.cc (number_char_p): Likewise.

2000-06-22  Bruno Haible  <haible@clisp.cons.org>

	* include/cl_object.h: Rename cl_word_size to cl_pointer_size.
	* include/cl_types.h (HAVE_FAST_LONGLONG): Also define on Irix6
	  with N32 ABI.
	  (cl_word_size): New macro.
	* src/float/sfloat/cl_SF.h: Use cl_pointer_size instead of
	  cl_word_size.

2000-05-31  Bruno Haible  <haible@clisp.cons.org>

	* tests/exam_I_floor.cc (integer_floor_tests): Add one more entry.
	  From a sample that fails with gcc-2.95.2 on Sparc.
	* tests/exam_I_gcd.cc (integer_gcd_tests): Likewise.

2000-05-30  Richard Kreckel  <kreckel@ginac.de>

	* configure.in, autoconf/aclocal.m4 (CL_GMP_H_VERSION, CL_GMP_CHECK):
	  New macros.
	* configure.in, include/cl_config.h.in (CL_VERSION, CL_VERSION_MINOR,
	  CL_VERSION_PATCHLEVEL): New definitions.
	* autoconf/config.guess, autoconf/config.sub, autoconf/ltconfig,
	  autoconf/ltmain.sh: updated from FSF (libtool 1.3.5, etc).
	* src/Makefile.in, configure.in: release-variables renamed from 
	  CLN_* to CL_*.
	* configure.in: default to build both shared and static library
	  (i.e. default to the most common behaviour).

2000-05-29  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST): Added missing changequote
	  environment around the patch of 2000-05-23.

2000-05-29  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_PROG_INSTALL): Fix typo.
	  Reported by Thomas Klausner <wiz@danbala.ifoer.tuwien.ac.at>.

2000-05-27  Richard Kreckel  <kreckel@ginac.de>

	* src/float/lfloat/algebraic/cl_LF_sqrt.cc,
	  src/base/digitseq/cl_DS_sqrt.cc: Readjusted break-even points.

2000-05-24  Richard Kreckel  <kreckel@ginac.de>

	* autoconf/config.*: Updated to new version from FSF
	  (the new libtool wants this).
	* src/Makefile.in: added $(LDFLAGS) to link step.
	* src/base/digitseq/cl_2DS_div.cc, cl_2DS_recip.cc: Readjusted 
	  break-even points.

2000-05-23  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST): Determine host_cpu,
	  host_vendor, host_os correctly if $host has more than two hyphens.

2000-05-19  Richard Kreckel  <kreckel@ginac.de>

	* src/base/digitseq/cl_DS_mul.cc: Rearranged break-even points to
	  better match present-day CPUs whenever GMP3 is used.
	* src/base/digitseq/cl_DS_div.cc: dto. 
	* src/TUNING: Added comment about order of tuning.
	* configure, configure.in: Safer GMP3-detection.
	* INSTALL.generic: Clarified behaviour of --with-gmp.
	* autoconf/config.guess: updated from Clisp-2000-03-06 sources.

2000-05-04  Richard Kreckel  <kreckel@ginac.de>

	* gmp/: removed completely.  From now on we are going to link
	  externally against libgmp3.0 or above!
	* configure, configure.in, Makefile.in, */Makeflags: removed support
	  of internal gmp 2.0.2, like $GMP_INCLUDES, which should be done by
	  setting $CPPFLAGS instead.
	* Makefile.in: Added libtool inter-library dependency for -lgmp and
	  conforming interface versioning (-version-info).
	* autoconf/ltconfig, autoconf/ltmain.sh: Updated to newer versions
	  from libtool 1.3.4.

2000-02-22  Bruno Haible  <haible@clisp.cons.org>

	* src/base/digitseq/cl_asm_mips_.cc: Starting at argument 5 the
	  parameter passing was changed for the MIPS n32 ABI.

2000-01-24  Richard Kreckel  <kreckel@ginac.de>

	* gmp/*: Replaced the complete mpn sources with the ones from
	  Debian since they are maintained while the ones from FSF
	  aren't and there were problems on some architectures, PowerPC
	  in particular.  See the file gmp/README.CLN.  This way the
	  hard links in this directory have vanished, they were causing
	  trouble for people working in AFS.  This became necessary for
	  Debian, because there it woudn't compile on PPC.

2000-01-13  Richard Kreckel  <kreckel@ginac.de>

	* Version 1.0.3 released.

2000-01-13  Richard Kreckel  <kreckel@ginac.de>

	* src/base/cl_macros.h (nonreturning_function): For egcs and newer
	  use __attribute__ ((__noreturn__)) instead of the __volatile__
	  storage class.
	  (nonreturning): Remove macro.
	* include/*: Minor fixes to stop -ansi -pedantic from complaining.
	* include/cl_integer.h: (doublefactorial): New declaration.
	* src/integer/misc/combin/cl_I_doublefactorial.cc: New file.

1999-12-18  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/acgeneral.m4 (AC_ARG_PROGRAM): Create conftestsed using
	  "cat", not "echo".
	* autoconf/ltconfig: Improve support for recent FreeBSD 3.
	* include/cl_GV.h (cl_GV_vectorops): Change return type from 'T' to
	  'const T', to match definition in src/vector/cl_GV_number.cc.
	  Reported by Duncan Simpson <dps@io.stargate.co.uk>.
	* gmp/mpn/Makefile.in (.S.lo): Use 'if', not '&&', because '&&' may
	  yield return code 1.

1999-09-07  Bruno Haible  <haible@clisp.cons.org>

	* Version 1.0.2 released.

1999-09-06  Bruno Haible  <haible@clisp.cons.org>

	* src/rational/cl_RA.h (integerp, ratiop): Instead of returning a
	  boolean expression, write alternatives ending with either
	  "return cl_true;" or "return cl_false;". This way, g++ does a
	  better job inlining it.
	* src/float/cl_F.h (longfloatp): Likewise.
	* src/real/cl_R.h (rationalp, integerp, floatp): Likewise.
	* src/complex/cl_C.h (realp, complexp): Likewise.

1999-09-05  Bruno Haible  <haible@clisp.cons.org>

	* include/cl_integer.h (cl_equal_hashcode): New declaration.
	* include/cl_rational.h (cl_equal_hashcode): New declaration.
	* include/cl_sfloat.h (cl_equal_hashcode): New declaration.
	* include/cl_ffloat.h (cl_equal_hashcode): New declaration.
	* include/cl_dfloat.h (cl_equal_hashcode): New declaration.
	* include/cl_lfloat.h (cl_equal_hashcode): New declaration.
	* include/cl_float.h (cl_equal_hashcode): New declaration.
	* include/cl_real.h (cl_equal_hashcode): New declaration.
	* include/cl_complex.h (cl_equal_hashcode): New declaration.
	* src/base/cl_N.h (equal_hashcode_low, equal_hashcode_one): New macros.
	* src/integer/misc/cl_I_eqhashcode.cc: New file.
	* src/rational/misc/cl_RA_eqhashcode.cc: New file.
	* src/float/sfloat/misc/cl_SF_eqhashcode.cc: New file.
	* src/float/ffloat/misc/cl_FF_eqhashcode.cc: New file.
	* src/float/dfloat/misc/cl_DF_eqhashcode.cc: New file.
	* src/float/lfloat/misc/cl_LF_eqhashcode.cc: New file.
	* src/float/misc/cl_F_eqhashcode.cc: New file.
	* src/real/misc/cl_R_eqhashcode.cc: New file.
	* src/complex/misc/cl_C_eqhashcode.cc: New file.
	* doc/cln.tex: Document `cl_equal_hashcode'.

1999-09-05  Bruno Haible  <haible@clisp.cons.org>

	* include/cl_ring.h (cl_number_ring_ops): Add `contains' member.
	  (cl_number_ring): New class.
	  (cl_specialized_number_ring<T>): Inherit from cl_number_ring.
	  (instanceof): New function.
	* src/integer/ring/cl_I_ring.cc (cl_I_p): New function.
	* src/integer/misc/cl_I_as.cc (cl_I_p): Add comment.
	* src/rational/ring/cl_RA_ring.cc (cl_RA_p): New function.
	* src/rational/misc/cl_RA_as.cc (cl_RA_p): Add comment.
	* src/real/ring/cl_R_ring.cc (cl_R_p): New function.
	* src/real/misc/cl_R_as.cc (cl_R_p): Add comment.
	* src/complex/ring/cl_C_ring.cc (cl_N_p): New function.
	* src/complex/misc/cl_N_as.cc (cl_N_p): Add comment.
	* doc/cln.tex: Document `instanceof'.

1999-09-05  Bruno Haible  <haible@clisp.cons.org>

	* include/cl_rational.h (numerator, denominator): New declarations.
	* src/rational/elem/cl_RA_numerator.cc: New file.
	* src/rational/elem/cl_RA_denominator.cc: New file.
	* include/cl_integer.h (numerator, denominator): New inline functions.
	* doc/cln.tex: Document `numerator' and `denominator'.

1999-09-05  Bruno Haible  <haible@clisp.cons.org>

	* src/rational/algebraic/cl_RA_rootp.cc (rootp): Fix endless loop
	  in the integer case.
	* src/rational/algebraic/cl_RA_rootp_I.cc (rootp): Likewise.

1999-09-05  Bruno Haible  <haible@clisp.cons.org>

	* include/cl_config.h.in: Support for sparc64 CPU.
	* include/cl_modules.h: Likewise.
	* include/cl_types.h: Likewise.
	* include/cl_object.h: Likewise.
	* include/cl_GV.h: Likewise.
	* src/Makefile.in: Likewise.
	* src/base/cl_alloca.h: Likewise.
	* src/base/cl_macros.h: Likewise.
	* src/base/cl_sysdep.h: Likewise.
	* src/base/cl_low.h: Likewise.
	* src/base/digitseq/cl_asm.h: Likewise.
	* src/base/digitseq/cl_asm_.cc: Likewise.
	* src/base/digitseq/cl_asm_sparc64.h: New file.
	* src/base/digitseq/cl_asm_sparc64_.cc: New file.
	* src/modinteger/cl_MI_int.h: Support for sparc64 CPU.
	* src/polynomial/elem/cl_UP_no_ring.cc: Likewise.
	* src/polynomial/elem/cl_UP_GF2.h: Likewise.
	* src/polynomial/elem/cl_asm_GF2.cc: Likewise.

1999-09-04  Bruno Haible  <haible@clisp.cons.org>

	* src/base/digitseq/cl_asm_sparc_.cc (orc2_loop_up, orc2_loop_down):
	  Use the `orn' instruction.

1999-08-14  Bruno Haible  <haible@clisp.cons.org>

	Assume all platforms have <stdlib.h> and clock_t.
	* configure.in: Don't call CL_STDLIB_H and CL_CLOCK_T.
	* src/base/cl_base_config.h.in (CLOCK_T): Remove definition.
	* src/base/random/cl_random_from.cc: Use clock_t instead of CLOCK_T.
	* src/timing/cl_t_config.h.in (CLOCK_T): Remove definition.
	* src/timing/cl_t_current2.cc: Use clock_t instead of CLOCK_T.

1999-07-18  Bruno Haible  <haible@clisp.cons.org>

	* gmp/config.guess: Link to autoconf/config.guess.
	  gmp/config.sub: Link to autoconf/config.sub.
	  Needed for Win32 platforms.

1999-07-17  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST_CPU): Distinguish "sparc" and
	  "sparc64" according to the C compiler, not the uname result.

1999-06-17  Bruno Haible  <haible@clisp.cons.org>

	* src/base/digitseq/cl_asm_sparc_.cc (compare_loop_up): Fix
	  COUNTER_LOOPS version, fortunately not used yet.

	* include/cl_modules.h: Prepare for gcc version 3.

1999-06-12  Bruno Haible  <haible@clisp.cons.org>

	* src/rational/elem/cl_RA_plus.cc, src/rational/elem/cl_RA_minus.cc:
	  Change the last call from I_I_to_RT to I_I_to_RA.

1999-06-09  Bruno Haible  <haible@clisp.cons.org>

	* Version 1.0.1 released.

1999-06-09  Bruno Haible  <haible@clisp.cons.org>

	* src/integer/cl_I.h (pFN_maxlength_digits_at): Define also when
	  intDsize==64.

1999-06-08  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/intparam.c (printf_underscored): Change argument type to
	  `const char*'.
	* include/cl_modules.h (CL_OUTPUT_LABEL, CL_JUMP_TO): New macros.
	  (CL_PROVIDE, CL_PROVIDE_END): Use them.
	* include/cl_string.h (cl_heap_string::operator new): Return 1, not 0.
	* include/cl_GV.h (cl_GV_inner<T>::operator new): Likewise.
	* src/base/ring/cl_no_ring.cc (dummy_canonhom, dummy_expt_pos): Don't
	  cast a cl_I to void here. Works around a bug in g++-2.95.
	* src/complex/misc/cl_C_class.cc: Include "cl_C.h".
	* src/polynomial/elem/cl_UP_no_ring.cc (dummy_canonhom,
	   dummy_expt_pos): Don't cast a cl_I to void here. Works around a bug
	  in g++-2.95.
	* src/polynomial/elem/cl_asm_sparc_GF2.cc (DECLARE_FUNCTION): New
	  macro.
	* src/rational/misc/cl_RA_class.cc: Include "cl_RA.h".
	* src/vector/cl_GV_I.cc (cl_heap_GV_I_general::operator new,
	   DEFINE_cl_heap_GV_I_bits): Return 1, not 0.
	* src/vector/cl_GV_number.cc (cl_heap_GV_number_general::operator new):
	  Likewise.

1999-06-01  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST_CPU): Canonicalize alpha
	  variants to alpha.

1999-05-29  Bruno Haible  <haible@clisp.cons.org>

	* src/base/digitseq/cl_asm_i386_.cc (DECLARE_FUNCTION): Treat
	  OpenBSD like NetBSD.
	* src/base/digitseq/cl_asm_sparc_.cc (DECLARE_FUNCTION): Likewise.
	* src/base/digitseq/cl_asm_m68k_.cc (DECLARE_FUNCTION): Treat
	  OpenBSD like NetBSD, and Linux/ELF like SVR4.

1999-05-16  Bruno Haible  <haible@clisp.cons.org>

	* src/base/cl_low.h (integerlength32) [__rs6000__]: Use old assembler
	  syntax on AIX systems and new assembler syntax on non-AIX systems.

1999-05-01  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/config.guess, autoconf/config.sub: Upgrade to newest
	  version from GNU CVS.

1999-04-24  Bruno Haible  <haible@clisp.cons.org>

	* src/integer/bitwise/cl_I_logand.cc (logand): Optimize the case when
	  either operand is a positive fixnum, O(1) instead of O(N).
	* src/integer/bitwise/cl_I_lognand.cc (lognand): Likewise.
	* src/integer/bitwise/cl_I_logandc2.cc (logandc2): Likewise for the
	  first operand.

1999-04-14  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_GLOBAL_CONSTRUCTORS): Add check whether
	  ctor/dtor needs to be exported.
	* include/cl_config.h.in (CL_NEED_GLOBALIZE_CTORDTOR): New macro.
	* include/cl_modules.h (CL_GLOBALIZE_JUMP_LABEL): Renamed from
	  CL_GLOBALIZE_LABEL.
	  (CL_GLOBALIZE_LABEL): New macro.
	  (CL_GLOBALIZE_CTORDTOR_LABEL): Renamed from CL_GLOBALIZE_ASM_LABEL.
	  (CL_PROVIDE): Update.

1999-04-12  Bruno Haible  <haible@clisp.cons.org>

	* src/Makefile.in ($(ASMFILES_S)): On HPPA, ignore preprocessing
	  errors ("unterminated string or character constant").
	  ($(ASMFILES_LO)): On HPPA, try with various settings of
	  COMPILER_PATH, in order to try /usr/ccs/bin/as and /bin/as.

1999-04-11  Bruno Haible  <haible@clisp.cons.org>

	* INSTALL: Mention gmp problems on MIPS.
	* doc/cln.tex: Likewise.

1999-03-24  Mumit Khan  <khan@xraylith.wisc.edu>

	* src/Makefile.in (SUBDIRS): Filter out CVS and RCS directories from
	  the source tree.
	* include/cl_modules.h (CL_GLOBALIZE_LABEL): Define for Win32.
	  (CL_GLOBALIZE_ASM_LABEL): New macro.
	  (CL_PROVIDE): Use it.
	* src/base/random/cl_random_from.cc: Handle WIN32.
	* src/timing/cl_t_current.cc: Likewise.

1999-03-15  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/intparam.c (main7): Use %lX instead of %X for a `long'.
	  (main8): Adapt for C++.

1999-03-09  Bruno Haible  <haible@clisp.cons.org>

	* INSTALL: Mention egcs-1.1 problems on Sparc.
	* doc/cln.tex: Likewise.

1999-03-08  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_FPU_CONTROL): Fix the "checking for"
	  messages.

1999-02-25  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4: In test programs, declare `int main()', not
	  `main()'.

	* lidia-interface/src/interfaces/integers/cln/bigint.c
	  (bigint_to_string): Fix for negative arguments.

	* src/base/cl_low.h: Check for `__sparc__', not `SPARC'.
	* src/base/cl_alloca.h: Likewise.

	* src/base/cl_low.h: Eliminate CLISP style "# " comments.
	* src/base/digitseq/cl_asm_arm_.cc,
	  src/base/digitseq/cl_asm_mips_.cc,
	  src/float/dfloat/elem/cl_DF_mul.cc: Likewise.

	* src/modinteger/cl_MI_pow2.h,
	  src/modinteger/cl_MI_pow2m1.h,
	  src/modinteger/cl_MI_pow2p1.h: Workaround g++-2.7.2 inlining bug.

1999-01-18  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/acgeneral.m4,
	  autoconf/acspecific.m4: Upgrade to autoconf-2.13.
	* autoconf/config.guess, autoconf/config.sub: Likewise.
	* autoconf/aclocal.m4 (CL_ALLOCA): Test for _MSC_VER and alloca being
	  a macro. Use ${ac_objext}.
	* src/base/cl_macros.h (alloca): Put _MSC_VER test before the others,
	  conforming with CL_ALLOCA.

1999-01-12  Bruno Haible  <haible@clisp.cons.org>

	* Version 1.0 released.

